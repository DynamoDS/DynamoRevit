//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Revit.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Revit.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An adaptive component could not be found or created..
        /// </summary>
        internal static string Adaptive_Component_Creation_Failed {
            get {
                return ResourceManager.GetString("Adaptive_Component_Creation_Failed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Analysis Results from Dynamo.
        /// </summary>
        internal static string AnalysisResultsDefaultDescription {
            get {
                return ResourceManager.GetString("AnalysisResultsDefaultDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Dynamo Analysis Results.
        /// </summary>
        internal static string AnalysisResultsDefaultName {
            get {
                return ResourceManager.GetString("AnalysisResultsDefaultName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The number of sample locations and samples is not equal..
        /// </summary>
        internal static string Array_Count_Mismatch {
            get {
                return ResourceManager.GetString("Array_Count_Mismatch", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot get base or survey point from document..
        /// </summary>
        internal static string CannotGetBaseOrSurveyPoint {
            get {
                return ResourceManager.GetString("CannotGetBaseOrSurveyPoint", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Could not find cell for panel.
        /// </summary>
        internal static string CellForPanelNotFound {
            get {
                return ResourceManager.GetString("CellForPanelNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Element has no Curtain Grid..
        /// </summary>
        internal static string CurtainGridNotFound {
            get {
                return ResourceManager.GetString("CurtainGridNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Reference should be to Face of the Element..
        /// </summary>
        internal static string CurtainGridReferenceError {
            get {
                return ResourceManager.GetString("CurtainGridReferenceError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to InternalElement of Curtain Panel is not Panel..
        /// </summary>
        internal static string CurtainPanelInternalElementError {
            get {
                return ResourceManager.GetString("CurtainPanelInternalElementError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Curtain Panel is not planar.
        /// </summary>
        internal static string CurtainPanelIsNotPlanar {
            get {
                return ResourceManager.GetString("CurtainPanelIsNotPlanar", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Curtain Panel is not rectangular.
        /// </summary>
        internal static string CurtainPanelIsNotRectangular {
            get {
                return ResourceManager.GetString("CurtainPanelIsNotRectangular", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Curtain Panel should represent Revit panel.
        /// </summary>
        internal static string CurtainPanelShouldRepresentRevitPanel {
            get {
                return ResourceManager.GetString("CurtainPanelShouldRepresentRevitPanel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Curve ist not planar. Please supply a planar curve..
        /// </summary>
        internal static string CurveIsNotPlanar {
            get {
                return ResourceManager.GetString("CurveIsNotPlanar", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Curves do not form a closed loop..
        /// </summary>
        internal static string CurveLoopNotClosed {
            get {
                return ResourceManager.GetString("CurveLoopNotClosed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot create Curve By Points with less than two points..
        /// </summary>
        internal static string CurveNeedsTwoPoints {
            get {
                return ResourceManager.GetString("CurveNeedsTwoPoints", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You supplied an {0}, but we could not extract a CurveReference from it!.
        /// </summary>
        internal static string CurveReferenceExtractionDetail {
            get {
                return ResourceManager.GetString("CurveReferenceExtractionDetail", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} requires a ElementCurveReference extracted from a Revit Element! .
        /// </summary>
        internal static string CurveReferenceExtractionFailure {
            get {
                return ResourceManager.GetString("CurveReferenceExtractionFailure", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A Curve Reference can only be obtained from an Element..
        /// </summary>
        internal static string CurveReferenceFailure {
            get {
                return ResourceManager.GetString("CurveReferenceFailure", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You can use the {0} or {1} to turn this Curve into a Revit Element..
        /// </summary>
        internal static string CurveReferenceHint {
            get {
                return ResourceManager.GetString("CurveReferenceHint", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Please supply a curve geometry..
        /// </summary>
        internal static string CurveRequired {
            get {
                return ResourceManager.GetString("CurveRequired", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Can only create DirectShapes from Solids, Surfaces or Meshes..
        /// </summary>
        internal static string DirectShapeInvalidArgument {
            get {
                return ResourceManager.GetString("DirectShapeInvalidArgument", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Dynamo Data.
        /// </summary>
        internal static string Dynamo_AVF_Data_Name {
            get {
                return ResourceManager.GetString("Dynamo_AVF_Data_Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Element cannot be annotated.
        /// </summary>
        internal static string ElementCannotBeAnnotatedError {
            get {
                return ResourceManager.GetString("ElementCannotBeAnnotatedError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You supplied an {0}, but we could not extract a ElementFaceReference from it!.
        /// </summary>
        internal static string FaceReferenceExtractionDetail {
            get {
                return ResourceManager.GetString("FaceReferenceExtractionDetail", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} requires a ElementFaceReference extracted from a Revit Element! .
        /// </summary>
        internal static string FaceReferenceExtractionFailure {
            get {
                return ResourceManager.GetString("FaceReferenceExtractionFailure", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A Face Reference can only be obtained from an Element..
        /// </summary>
        internal static string FaceReferenceFailure {
            get {
                return ResourceManager.GetString("FaceReferenceFailure", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You can use the {0} to turn this Surface into a Revit Element, then extract a ElementFaceReference from it..
        /// </summary>
        internal static string FaceReferenceHint {
            get {
                return ResourceManager.GetString("FaceReferenceHint", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Could not create the FamilyInstance.
        /// </summary>
        internal static string FamilyInstanceCreationFailure {
            get {
                return ResourceManager.GetString("FamilyInstanceCreationFailure", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A family with the specified name, {0}, could not be found in the document..
        /// </summary>
        internal static string FamilyNotFound {
            get {
                return ResourceManager.GetString("FamilyNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A FamilySymbol with the specified name does not exist in the document..
        /// </summary>
        internal static string FamilySymbolNotFound1 {
            get {
                return ResourceManager.GetString("FamilySymbolNotFound1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A FamilySymbol with the specified name, {0}, does not exist in the Family..
        /// </summary>
        internal static string FamilySymbolNotFound2 {
            get {
                return ResourceManager.GetString("FamilySymbolNotFound2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A FamilySymbol with the specified name, {0}, does not exist in the document..
        /// </summary>
        internal static string FamilySymbolNotFound3 {
            get {
                return ResourceManager.GetString("FamilySymbolNotFound3", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The file could not be found at: {0}.
        /// </summary>
        internal static string FileNotFound {
            get {
                return ResourceManager.GetString("FileNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A Revit FloorType with that name could not be located in the document..
        /// </summary>
        internal static string FloorTypeNotFound {
            get {
                return ResourceManager.GetString("FloorTypeNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Could not get a geometry object from the current document using the provided reference.
        /// </summary>
        internal static string GeometryObjectReferenceFailure {
            get {
                return ResourceManager.GetString("GeometryObjectReferenceFailure", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A Grid Element can only be created in a Revit Project..
        /// </summary>
        internal static string GridCreationFailure {
            get {
                return ResourceManager.GetString("GridCreationFailure", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The input list of parameters does not have the same number of values required by the adaptive component..
        /// </summary>
        internal static string InputParamsMismatch {
            get {
                return ResourceManager.GetString("InputParamsMismatch", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The input list of points does not have the same number of values required by the adaptive component..
        /// </summary>
        internal static string InputPointParamsMismatch {
            get {
                return ResourceManager.GetString("InputPointParamsMismatch", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The input list of UVs does not have the same number of values required by the adaptive component..
        /// </summary>
        internal static string InputUVParamsMismatch {
            get {
                return ResourceManager.GetString("InputUVParamsMismatch", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Could not obtain ImportInstance from imported Element.
        /// </summary>
        internal static string InstanceImportFailure {
            get {
                return ResourceManager.GetString("InstanceImportFailure", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The selected category is not valid in this document..
        /// </summary>
        internal static string InvalidCategory {
            get {
                return ResourceManager.GetString("InvalidCategory", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The end of the curve for creating a column should be above the start of the curve..
        /// </summary>
        internal static string InvalidColumnBaseLocation {
            get {
                return ResourceManager.GetString("InvalidColumnBaseLocation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The location of the structural element is not a valid curve..
        /// </summary>
        internal static string InvalidElementLocation {
            get {
                return ResourceManager.GetString("InvalidElementLocation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to FilterType is not valid..
        /// </summary>
        internal static string InvalidFilterType {
            get {
                return ResourceManager.GetString("InvalidFilterType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Element does not have a host..
        /// </summary>
        internal static string InvalidHost {
            get {
                return ResourceManager.GetString("InvalidHost", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The height must be greater than 0 and less that 30000 ft.  You provided a height of {0} ft..
        /// </summary>
        internal static string InvalidWallHeight {
            get {
                return ResourceManager.GetString("InvalidWallHeight", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A Material with the given name does not exist in the current Document..
        /// </summary>
        internal static string MaterialNotFound {
            get {
                return ResourceManager.GetString("MaterialNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ModelText Elements can only be created in a Family Document..
        /// </summary>
        internal static string ModelTextCreationFailure {
            get {
                return ResourceManager.GetString("ModelTextCreationFailure", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to There is no ModelTextType of the name, {0}, in the current Document..
        /// </summary>
        internal static string ModelTextTypeNotFound {
            get {
                return ResourceManager.GetString("ModelTextTypeNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Mullion should represent Revit&apos;s Mullion..
        /// </summary>
        internal static string MullionParseError {
            get {
                return ResourceManager.GetString("MullionParseError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to There are multiple curves converted from the input curve element..
        /// </summary>
        internal static string MultipleCurvesIntroducedAfterConversion {
            get {
                return ResourceManager.GetString("MultipleCurvesIntroducedAfterConversion", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to There are multiple surfaces converted from the input face..
        /// </summary>
        internal static string MultipleSurfacesIntroducedAfterConversion {
            get {
                return ResourceManager.GetString("MultipleSurfacesIntroducedAfterConversion", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No shared parameter file found..
        /// </summary>
        internal static string NoSharedParameterFileFound {
            get {
                return ResourceManager.GetString("NoSharedParameterFileFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The FamilyInstance is not an adaptive component..
        /// </summary>
        internal static string NotAdaptiveComponentError {
            get {
                return ResourceManager.GetString("NotAdaptiveComponentError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You need at least two elements for a dimension..
        /// </summary>
        internal static string NotEnoughDataError {
            get {
                return ResourceManager.GetString("NotEnoughDataError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} must be a positive integer.
        /// </summary>
        internal static string NotPositiveIntegerError {
            get {
                return ResourceManager.GetString("NotPositiveIntegerError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Some of the input curves are null..
        /// </summary>
        internal static string NullInputCurvesError {
            get {
                return ResourceManager.GetString("NullInputCurvesError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The number of divisions must be greater than 2!.
        /// </summary>
        internal static string NumberOfDivisionsMustBeGreaterThan2 {
            get {
                return ResourceManager.GetString("NumberOfDivisionsMustBeGreaterThan2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The input PolyCurve is not closed..
        /// </summary>
        internal static string OpenInputPolyCurveError {
            get {
                return ResourceManager.GetString("OpenInputPolyCurveError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid parameter group..
        /// </summary>
        internal static string ParameterGroupNotFound {
            get {
                return ResourceManager.GetString("ParameterGroupNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No parameter found by that name..
        /// </summary>
        internal static string ParameterNotFound {
            get {
                return ResourceManager.GetString("ParameterNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The parameter&apos;s storage type is not an Element..
        /// </summary>
        internal static string ParameterStorageNotElement {
            get {
                return ResourceManager.GetString("ParameterStorageNotElement", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The parameter&apos;s storage type is not an integer..
        /// </summary>
        internal static string ParameterStorageNotInteger {
            get {
                return ResourceManager.GetString("ParameterStorageNotInteger", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The parameter&apos;s storage type is not a number..
        /// </summary>
        internal static string ParameterStorageNotNumber {
            get {
                return ResourceManager.GetString("ParameterStorageNotNumber", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The parameter&apos;s storage type is not a string..
        /// </summary>
        internal static string ParameterStorageNotString {
            get {
                return ResourceManager.GetString("ParameterStorageNotString", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid parameter type..
        /// </summary>
        internal static string ParameterTypeNotFound {
            get {
                return ResourceManager.GetString("ParameterTypeNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Parameter {0} has no storage type..
        /// </summary>
        internal static string ParameterWithoutStorageType {
            get {
                return ResourceManager.GetString("ParameterWithoutStorageType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Please supply a point geometry..
        /// </summary>
        internal static string PointRequired {
            get {
                return ResourceManager.GetString("PointRequired", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Revit does not support turning PolyCurves into ModelCurves. Try exploding your PolyCurve into multiple Curves..
        /// </summary>
        internal static string PolyCurvesConversionError {
            get {
                return ResourceManager.GetString("PolyCurvesConversionError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Revit can only create a ReferenceCurve in a Family Document..
        /// </summary>
        internal static string ReferenceCurveCreationFailure {
            get {
                return ResourceManager.GetString("ReferenceCurveCreationFailure", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ReferencePoint Elements can only be created in a Family Document..
        /// </summary>
        internal static string ReferencePointCreationFailure {
            get {
                return ResourceManager.GetString("ReferencePointCreationFailure", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The number of sample points and number of samples must be the same..
        /// </summary>
        internal static string SamplePointsMismatchError {
            get {
                return ResourceManager.GetString("SamplePointsMismatchError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A Revit face with the corresponding tag could not be found..
        /// </summary>
        internal static string Tag_Lookup_Error {
            get {
                return ResourceManager.GetString("Tag_Lookup_Error", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A minimum of three points is required to create a topography surface..
        /// </summary>
        internal static string TopographyNeedsThreePoints {
            get {
                return ResourceManager.GetString("TopographyNeedsThreePoints", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Type not found in document..
        /// </summary>
        internal static string TypeNotFound {
            get {
                return ResourceManager.GetString("TypeNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ParameterType cannot be converted to UnitType..
        /// </summary>
        internal static string UnitTypeConversionError {
            get {
                return ResourceManager.GetString("UnitTypeConversionError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The supplied path is invalid..
        /// </summary>
        internal static string View_ExportAsImage_Path_Invalid {
            get {
                return ResourceManager.GetString("View_ExportAsImage_Path_Invalid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to View does not support annotations..
        /// </summary>
        internal static string ViewDoesNotSupportAnnotations {
            get {
                return ResourceManager.GetString("ViewDoesNotSupportAnnotations", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to There is no WallType of the given name in the current Document..
        /// </summary>
        internal static string WallTypeNotFound {
            get {
                return ResourceManager.GetString("WallTypeNotFound", resourceCulture);
            }
        }
    }
}
