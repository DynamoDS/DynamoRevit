{
  "Uuid": "3c9d0464-8643-5ffe-96e5-ab1769818209",
  "IsCustomNode": false,
  "Description": "",
  "Name": "01 Ellipse Tower v1",
  "ElementResolver": {
    "ResolutionMap": {
      "Point": {
        "Key": "Autodesk.DesignScript.Geometry.Point",
        "Value": "ProtoGeometry.dll"
      }
    }
  },
  "Inputs": [],
  "Outputs": [],
  "Nodes": [
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Ellipse.ByOriginRadii@Autodesk.DesignScript.Geometry.Point,double,double",
      "Id": "df50c731453648a8af5df8110470ce5d",
      "Inputs": [
        {
          "Id": "a7f4a92bdd71490abf6e159da9dbf7bd",
          "Name": "origin",
          "Description": "Point\nDefault value : Autodesk.DesignScript.Geometry.Point.ByCoordinates(0, 0, 0) (disabled)",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "cbc0f0c81534468d8d76d302b399c3e5",
          "Name": "xAxisRadius",
          "Description": "double\nDefault value : 1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "e014dd3dc74b4678a1c7cbcbc89e25aa",
          "Name": "yAxisRadius",
          "Description": "double\nDefault value : 1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "be1b2af0efe845ab84be48e197e66202",
          "Name": "Ellipse",
          "Description": "Ellipse",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Create an Ellipse centered at input Point, aligned with WCS XY Plane, with specified X and Y axis radii.\n\nEllipse.ByOriginRadii (origin: Point = Autodesk.DesignScript.Geometry.Point.ByCoordinates(0, 0, 0), xAxisRadius: double = 1, yAxisRadius: double = 1): Ellipse"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "Point.ByCoordinates(0,0,[0,30,height]);\n[10,8,12];\n[20,12,17];",
      "Id": "687da7274c0d4a2cbdd9e8a4ebc11e9f",
      "Inputs": [
        {
          "Id": "3388ba023d8c463883752abfe6657dad",
          "Name": "height",
          "Description": "height",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "b9a1ad16c16e4f5a8d701724510f4bad",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "dede9260039842599af49592fe1a0556",
          "Name": "",
          "Description": "Value of expression at line 2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "0dbb499c2d3a4547bec7a7d5b942594f",
          "Name": "",
          "Description": "Value of expression at line 3",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Surface.ByLoft@Autodesk.DesignScript.Geometry.Curve[]",
      "Id": "1dd7c86864d14b18a8278f28ba42fff8",
      "Inputs": [
        {
          "Id": "d76e7fa846d2496797a4cafc103aa131",
          "Name": "crossSections",
          "Description": "Curve[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "1c2d3c410d204c878b300797632015fb",
          "Name": "Surface",
          "Description": "Surface",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Create a Surface by lofting between input cross section Curves.\n\nSurface.ByLoft (crossSections: Curve[]): Surface"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "secondFloor..height..3.5;",
      "Id": "0828c18c466342a2a7133bb4cdf310c6",
      "Inputs": [
        {
          "Id": "943c99927aaa4997976840ce115003a9",
          "Name": "secondFloor",
          "Description": "secondFloor",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "1bec2a5a21a2455db269f8f260d4fe22",
          "Name": "height",
          "Description": "height",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "2d737e7fbf70404f9c00270533eaa8b4",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.DoubleSlider, CoreNodeModels",
      "NodeType": "NumberInputNode",
      "NumberType": "Double",
      "MaximumValue": 100.0,
      "MinimumValue": 0.0,
      "StepValue": 0.1,
      "InputValue": 50.0,
      "Id": "32a73dc149434c339177290ea57c2b2b",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "7169165aa7d549f1b42a10ee107a6d08",
          "Name": "",
          "Description": "Double",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "A slider that produces numeric values."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Point.ByCoordinates@double,double,double",
      "Id": "0d27cc6dec26449b8fb044507412d8e3",
      "Inputs": [
        {
          "Id": "6042a73547db4766ba578f1d9b77678e",
          "Name": "x",
          "Description": "double\nDefault value : 0",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "4ba2253a95fa4f3f8bdaadb477c7624b",
          "Name": "y",
          "Description": "double\nDefault value : 0",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "c33ae9b8d092439d86f3c5eacabc51ab",
          "Name": "z",
          "Description": "double\nDefault value : 0",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "547ff51b562e4ddeaff7bdb7be247254",
          "Name": "Point",
          "Description": "Point",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Form a Point given 3 cartesian coordinates\n\nPoint.ByCoordinates (x: double = 0, y: double = 0, z: double = 0): Point"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "// first floor height\n8;",
      "Id": "17da1ec7f9fd4150b63081686a5072fb",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "e97c8ae1fd2149909fb56e42238fb4e0",
          "Name": "",
          "Description": "Value of expression at line 2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "0;",
      "Id": "35e15b45c97c49c48ece41b8936e65ea",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "d845ec0ea42942d2bee95268d6b94315",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.AddItemToFront@var[]..[],var[]..[]",
      "Id": "9ddaf020469f4978bdc3c3a4f25575b4",
      "Inputs": [
        {
          "Id": "fa9dbb1f6c184ee481e0f20ec4688ba8",
          "Name": "item",
          "Description": "Item to be added. Item could be an object or a list.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "3e75097e8d5d4c7f9eb2ae64f989d3ba",
          "Name": "list",
          "Description": "List to add on to.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "0052c129850a451db1332edf52ef22c5",
          "Name": "list",
          "Description": "New list.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Adds an item to the beginning of a list.\n\nList.AddItemToFront (item: var[]..[], list: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Plane.ByOriginNormal@Autodesk.DesignScript.Geometry.Point,Autodesk.DesignScript.Geometry.Vector",
      "Id": "bab9680dbc9b401bb3863f747bba7fef",
      "Inputs": [
        {
          "Id": "3636d85bedec4f7bbf1aa6531d8467c7",
          "Name": "origin",
          "Description": "Point\nDefault value : Autodesk.DesignScript.Geometry.Point.ByCoordinates(0, 0, 0) (disabled)",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "c04e68bb487f4b88b6ba8fe11744222f",
          "Name": "normal",
          "Description": "Vector\nDefault value : Autodesk.DesignScript.Geometry.Vector.ByCoordinates(0, 0, 1) (disabled)",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "967546d1b13b43c7ab9a4661e81e582d",
          "Name": "Plane",
          "Description": "Plane",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Create a Plane centered at root Point, with input normal Vector.\n\nPlane.ByOriginNormal (origin: Point = Autodesk.DesignScript.Geometry.Point.ByCoordinates(0, 0, 0), normal: Vector = Autodesk.DesignScript.Geometry.Vector.ByCoordinates(0, 0, 1)): Plane"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Vector.ZAxis",
      "Id": "56f121c92a284267acb587410c134853",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "46661b27487a4ac28eadae06ee7ca343",
          "Name": "Vector",
          "Description": "Vector",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Get the canonical Z axis Vector (0,0,1)\n\nVector.ZAxis ( ): Vector"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Geometry.Intersect@Autodesk.DesignScript.Geometry.Geometry",
      "Id": "ee32c3002e704fbd91e7647a3d398165",
      "Inputs": [
        {
          "Id": "45161df5059a4511b64683a4c748da3f",
          "Name": "geometry",
          "Description": "Autodesk.DesignScript.Geometry.Geometry",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "8f17b10f3f6149a6af26468f7ee0f102",
          "Name": "other",
          "Description": "Geometry",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "cbd281d4475c41138f178482d71d6643",
          "Name": "Geometry[]",
          "Description": "Geometry[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Get the intersection Geometry for this object and another\n\nGeometry.Intersect (other: Geometry): Geometry[]"
    },
    {
      "ConcreteType": "DSRevitNodesUI.FloorTypes, DSRevitNodesUI",
      "SelectedIndex": 4,
      "SelectedString": "LW Concrete on Metal Deck",
      "NodeType": "ExtensionNode",
      "Id": "d5691294898b4cb6adcca5dc739122e6",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "68485f4fed28410ab387caecd74ddd32",
          "Name": "Floor Type",
          "Description": "The selected Floor Type",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "All floor types available in the document."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "9673206b20d24a4d802d0dea535f3b97",
      "Inputs": [
        {
          "Id": "42e89b83dade4013a2f82a6c0abfc856",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "20942f80c1df4eb69945b75140bb84c3",
          "Name": "amt",
          "Description": "Layers of nesting to remove.\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "60a558d0d43949c38e6d480ea1e3dc64",
          "Name": "var[]..[]",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amt: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.Level.ByElevationAndName@double,string",
      "Id": "61617e144eac42f6ba92114e04564cf9",
      "Inputs": [
        {
          "Id": "df3cd8335ba246d1935e7e80e8d9ca72",
          "Name": "elevation",
          "Description": "double",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "c5165b66955f49c4ae370fb71c07cce1",
          "Name": "name",
          "Description": "string",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "9094f3cd79de4f52b14f7a52f567c0de",
          "Name": "Level",
          "Description": "Level",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Create a Revit Level given it's elevation and name in the project\n\nLevel.ByElevationAndName (elevation: double, name: string): Level"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "2..numFloors;",
      "Id": "bf0f7c712f944d47b4ac5a0f5d5735cc",
      "Inputs": [
        {
          "Id": "f4d84d6aefba4cb08061b8dc3b693004",
          "Name": "numFloors",
          "Description": "numFloors",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "e3f4900d80964c4daf3c37179cb34189",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Count@var[]..[]",
      "Id": "4603f9e930254507946395acb711e5d3",
      "Inputs": [
        {
          "Id": "06db10feb58d4e2f8d0261f6006caaed",
          "Name": "list",
          "Description": "List to get the item count of.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "1cc897d558aa4aeaa63b5b1d3e7a7be6",
          "Name": "count",
          "Description": "List length.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the number of items stored in the given list.\n\nList.Count (list: var[]..[]): int"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "\"G\";",
      "Id": "6056a56cbaa84f6aad355c68be985429",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "e9c35bec1d13491ca6fb0d885db45972",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.AddItemToFront@var[]..[],var[]..[]",
      "Id": "7ada4d19809c479fa21f9c56f2fc1618",
      "Inputs": [
        {
          "Id": "92e87face89240bd8f37292ab89bfd17",
          "Name": "item",
          "Description": "Item to be added. Item could be an object or a list.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "0861951efa654b599053dca62d16a36f",
          "Name": "list",
          "Description": "List to add on to.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "cdb14477e3264fb49371ae5d404900db",
          "Name": "list",
          "Description": "New list.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Adds an item to the beginning of a list.\n\nList.AddItemToFront (item: var[]..[], list: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "\"Lvl \";",
      "Id": "ab2f98f161ca4ef69ef738b1e75b40ad",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "7d1d634599eb49aaad36cb8a0d919fb9",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSVarArgFunction, DynamoCore",
      "FunctionSignature": "DSCore.String.Concat@string[]",
      "FunctionType": "VariableArgument",
      "NodeType": "FunctionNode",
      "Id": "ac182ff6b5054c28a7957740e7333033",
      "Inputs": [
        {
          "Id": "843342567c4c402a93601894366f3df4",
          "Name": "string0",
          "Description": "List of strings to concatenate.\n\nstring[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "ec4fcf124f2245c7b175f88b0c68d826",
          "Name": "string1",
          "Description": "string[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "4188fce453b34c94aba9a64f165f75e5",
          "Name": "str",
          "Description": "String made from list of strings.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Concatenates multiple strings into a single string.\n\nString.Concat (strings: string[]): string"
    },
    {
      "ConcreteType": "CoreNodeModels.HigherOrder.Map, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "81efbd9ab55e4012903593eb42fcd2c2",
      "Inputs": [
        {
          "Id": "1867b74a55244da6a1becdb52d967285",
          "Name": "list",
          "Description": "The list to map over.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "69cca4395e81421a9c992a89403918d0",
          "Name": "f(x)",
          "Description": "The procedure used to map element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "0bd76d2d73fe40c2b73b5dffd2a9c2a0",
          "Name": "mapped",
          "Description": "Mapped list",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Applies a function over all elements of a list, generating a new list from the results."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "0..1..#40;",
      "Id": "1d4d7beb9ecb4e5c9eb0d610b08f028c",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "2b56471a9adf4f769af9f6ffc7ae35ab",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.Floor.ByOutlineTypeAndLevel@Autodesk.DesignScript.Geometry.PolyCurve,Revit.Elements.FloorType,Revit.Elements.Level",
      "Id": "1bcce36c7ea34c709271544fd378ec41",
      "Inputs": [
        {
          "Id": "11ee54d85ab641c990019d4e4acfa5f2",
          "Name": "outline",
          "Description": "PolyCurve",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "28071597c7c34440a4beea11b4bfd079",
          "Name": "floorType",
          "Description": "FloorType",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "b31dbdb4b48a4818b790cbab08b0f47d",
          "Name": "level",
          "Description": "Level",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "03a16f7410cf4318bcade70d065104f4",
          "Name": "Floor",
          "Description": "The floor",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Create a Revit Floor given its curve outline and Level\n\nFloor.ByOutlineTypeAndLevel (outline: PolyCurve, floorType: FloorType, level: Level): Floor"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Curve.PointAtParameter@double",
      "Id": "808124fa42bb480eba78a8ccdbff706e",
      "Inputs": [
        {
          "Id": "65761d04df6d4500b70955408c4c4a97",
          "Name": "curve",
          "Description": "Autodesk.DesignScript.Geometry.Curve",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "4fb613d0f9f54238834d7a0918d4f667",
          "Name": "param",
          "Description": "The parameter at which to evaluate\n\ndouble\nDefault value : 0",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "04c02122df944311a5933c1a73e2e8ab",
          "Name": "Point",
          "Description": "Point",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "CrossProduct",
      "Description": "Get a Point on the Curve at a specified parameter between StartParameter() and EndParameter()\n\nCurve.PointAtParameter (param: double = 0): Point"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.PolyCurve.ByPoints@Autodesk.DesignScript.Geometry.Point[],bool",
      "Id": "8ae615cf96a043b1b18d5711df8642d9",
      "Inputs": [
        {
          "Id": "9a20700a23414a5280b68487ce17d442",
          "Name": "points",
          "Description": "Points to make polycurve\n\nPoint[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "dee54b1062b246589f00d7a4922b1b12",
          "Name": "connectLastToFirst",
          "Description": "make close or open polycurve\n\nbool\nDefault value : false",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "637435ffcb484265a7cbafe4a5d967cc",
          "Name": "PolyCurve",
          "Description": "PolyCurve",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Make PolyCurve by connecting points. Set the 'connectLastToFirst' input to true to close the PolyCurve.\n\nPolyCurve.ByPoints (points: Point[], connectLastToFirst: bool = false): PolyCurve"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "10;\n15;",
      "Id": "db407934abcc4598ba4893b716e56887",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "60a01739d659405ba4b01f379032bcf3",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "019114f629a14ef1906d17905d4fa5e3",
          "Name": "",
          "Description": "Value of expression at line 2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.AdaptiveComponent.ByPoints@Autodesk.DesignScript.Geometry.Point[][],Revit.Elements.FamilyType",
      "Id": "fdc9add47e4740d3ba5772e349b53aa0",
      "Inputs": [
        {
          "Id": "23cbdeaf45f24394ba37a60075750b73",
          "Name": "points",
          "Description": "a two-dimensional array of points\n\nPoint[][]",
          "UsingDefaultValue": false,
          "Level": 3,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "7de1fca4ae0842899e0af24c0220c565",
          "Name": "familyType",
          "Description": "a family type to use to create the adaptive components\n\nFamilyType",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "b7cdfc7aa5d04c40ab462c2fd04e08ac",
          "Name": "AdaptiveComponent[]..[]",
          "Description": "AdaptiveComponent[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Create a list of adaptive components from two-dimensional array of points\n\nAdaptiveComponent.ByPoints (points: Point[][], familyType: FamilyType): AdaptiveComponent[]..[]"
    },
    {
      "ConcreteType": "DSRevitNodesUI.FamilyTypes, DSRevitNodesUI",
      "SelectedIndex": 19,
      "SelectedString": "deflectionPanel:deflectionPanel",
      "NodeType": "ExtensionNode",
      "Id": "87dbdc09469f42b6a69662d22c3196b3",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "130035679ff74216a873d82cae6bd47e",
          "Name": "Family Type",
          "Description": "The selected Family Type",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "All family types available in the document."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.Element.OverrideColorInView@DSCore.Color",
      "Id": "d986daaceae14e80943044527fcb133e",
      "Inputs": [
        {
          "Id": "e140d70f84004654a8a0586d24693a8e",
          "Name": "element",
          "Description": "Revit.Elements.Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "c257754fc8e249a1af13fc61a04b559e",
          "Name": "color",
          "Description": "The color to apply to a solid fill on the element.\n\nColor",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "f1b103a343ca4e50a6c6f29e27abec8f",
          "Name": "Element",
          "Description": "Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Override the element's color in the active view.\n\nElement.OverrideColorInView (color: Color): Element"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.Filename, CoreNodeModels",
      "HintPath": ".\\rainbowColors.jpg",
      "InputValue": ".\\rainbowColors.jpg",
      "NodeType": "ExtensionNode",
      "Id": "e0971bd156084659a4dd839292455472",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "0f7dbba36486477c93c764dcc98bba30",
          "Name": "",
          "Description": "Filename",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows you to select a file on the system to get its filename"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Chop@var[]..[],int[]",
      "Id": "53a7d94ef49a459487de5659e81e317c",
      "Inputs": [
        {
          "Id": "34c7dac0a5fe44d1b69c4e5ef0ebea7e",
          "Name": "list",
          "Description": "List to chop into sublists\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "6100b0519ebb4843b2807d33d4e2ee69",
          "Name": "lengths",
          "Description": "Lengths of consecutive sublists to be created from the input list\n\nint[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "a8d5805c5ac144dfaddefcd4c8756830",
          "Name": "lists",
          "Description": "Sublists created from the list",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Chop a list into a set of consecutive sublists with the specified lengths. List division begins at the top of the list.\n\nList.Chop (list: var[]..[], lengths: int[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Transpose@var[]..[]",
      "Id": "f446efcabbb147bcbdb2f99dc5f88a28",
      "Inputs": [
        {
          "Id": "7894b677c46a41dc8ee63212fe9cc464",
          "Name": "lists",
          "Description": "A list of lists to be transposed.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "0852196ac9574b32a7e0f0be2dbd5f01",
          "Name": "lists",
          "Description": "A list of transposed lists.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Swaps rows and columns in a list of lists. If there are some rows that are shorter than others, null values are inserted as place holders in the resultant array such that it is always rectangular.\n\nList.Transpose (lists: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "704e87d9cab04108bfd1035e12f40143",
      "Inputs": [
        {
          "Id": "75dbb75f8a2541108a5872244668cd0a",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "80ab55f4cee94ec3ac3f801b29e3bb8c",
          "Name": "amt",
          "Description": "Layers of nesting to remove.\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "31646b15c7e74ad79fd2d25a1a2ef940",
          "Name": "var[]..[]",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amt: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "CoreNodeModels.FromObject, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "6cee59e96a284b778c5f5854cc5c389f",
      "Inputs": [
        {
          "Id": "735422e4fab446a3bdea633fd227794e",
          "Name": "obj",
          "Description": "Object to be serialized",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "07b8285f7e99447aaf9792c4f62f7f00",
          "Name": "str",
          "Description": "Result of math computation",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Convert an object to a string representation."
    },
    {
      "ConcreteType": "CoreNodeModels.Input.FileObject, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "ecd704fa11734b74bd580162dedd5dc5",
      "Inputs": [
        {
          "Id": "3057e660e31f457e867f0a829cb02206",
          "Name": "path",
          "Description": "Path to the file.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "c935ee18e73c45b4a855bb36b2458782",
          "Name": "file",
          "Description": "File object",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a file object from a path."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.IO.Image.ReadFromFile@var",
      "Id": "34a8cbb11d8844be823dff761a7f8bb8",
      "Inputs": [
        {
          "Id": "3b8c28301bf34d74a28fdb21677e1254",
          "Name": "file",
          "Description": "File object to load image from.\n\nvar",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "0708e0e40c414d88bed1e822f6d48d19",
          "Name": "image",
          "Description": "Image",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Loads the file as a bitmap.\n\nImage.ReadFromFile (file: var): var"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.IO.Image.Pixels@var,int,int",
      "Id": "c921a57cb7c7417fa5a46ac605ebfde4",
      "Inputs": [
        {
          "Id": "2ecc18440c684f198fc2110318fd575b",
          "Name": "image",
          "Description": "The image to read.\n\nvar",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "4d0859e27f744fa79199c2b2b7dcf3c2",
          "Name": "xSamples",
          "Description": "Number of sample grid points in the X direction.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "168467f5eaee4b08a857be0fc9095cca",
          "Name": "ySamples",
          "Description": "Number of sample grid points in the Y direction.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "19b43f3c9a2e4ccb8cefdc93ebded593",
          "Name": "colors",
          "Description": "Colors at the specified grid points.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Reads an image file and returns the color values at the specified grid locations.\n\nImage.Pixels (image: var, xSamples: int, ySamples: int): Color[][]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Function, DynamoCore",
      "FunctionSignature": "1e768134-b4c4-4605-a428-b2929598b21b",
      "FunctionType": "Graph",
      "NodeType": "FunctionNode",
      "Id": "8bd20cf7418f4b83a33dd5c569271224",
      "Inputs": [
        {
          "Id": "6927f860174c4bd59bd4459ac4c74435",
          "Name": "surface",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "f9401b45f2534be19d314cb6dcb87b59",
          "Name": "u",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "f7a12e479fcc4f07aa1bd6972395bd41",
          "Name": "v",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "5779de4abb3142c9b6bc668a5d94de56",
          "Name": "Quad groups",
          "Description": "return value",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": ""
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Transpose@var[]..[]",
      "Id": "d385112fb76a4937acb9afebe4824e61",
      "Inputs": [
        {
          "Id": "c5b8c65f8fed425db7efd740c5a1e792",
          "Name": "lists",
          "Description": "A list of lists to be transposed.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "1839bc98431a407bafa9a3b1412aff8c",
          "Name": "lists",
          "Description": "A list of transposed lists.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Swaps rows and columns in a list of lists. If there are some rows that are shorter than others, null values are inserted as place holders in the resultant array such that it is always rectangular.\n\nList.Transpose (lists: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Transpose@var[]..[]",
      "Id": "0bfd58334a024aadbc08e973e80e95a8",
      "Inputs": [
        {
          "Id": "b83158c41eb145388a24575f6ef44bcd",
          "Name": "lists",
          "Description": "A list of lists to be transposed.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 3,
          "UseLevels": true,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "31a1a8114c794638999290cabe92014e",
          "Name": "lists",
          "Description": "A list of transposed lists.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Swaps rows and columns in a list of lists. If there are some rows that are shorter than others, null values are inserted as place holders in the resultant array such that it is always rectangular.\n\nList.Transpose (lists: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "25aa4d1ca1db434db40a90bbef69a027",
      "Inputs": [
        {
          "Id": "a7e07a6c1e084346b5c725865c09a199",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "7c88fbabd36e479eb6e9e647294304f3",
          "Name": "amt",
          "Description": "Layers of nesting to remove.\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "70ada04aeced4f58985dfdc7b7502914",
          "Name": "var[]..[]",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amt: int = -1): var[]..[]"
    }
  ],
  "Connectors": [
    {
      "Start": "be1b2af0efe845ab84be48e197e66202",
      "End": "d76e7fa846d2496797a4cafc103aa131",
      "Id": "2d6b4a609ad3460e85a0a8ee85dce981"
    },
    {
      "Start": "b9a1ad16c16e4f5a8d701724510f4bad",
      "End": "a7f4a92bdd71490abf6e159da9dbf7bd",
      "Id": "6335429ed8134146b867fe70c0f952cb"
    },
    {
      "Start": "dede9260039842599af49592fe1a0556",
      "End": "cbc0f0c81534468d8d76d302b399c3e5",
      "Id": "75be9a2faaf944a8922aa74808a006f3"
    },
    {
      "Start": "0dbb499c2d3a4547bec7a7d5b942594f",
      "End": "e014dd3dc74b4678a1c7cbcbc89e25aa",
      "Id": "0c6d680666074bf1a1f04fb5f78df09e"
    },
    {
      "Start": "1c2d3c410d204c878b300797632015fb",
      "End": "45161df5059a4511b64683a4c748da3f",
      "Id": "c906681da71845afb9c0fdea23d1569f"
    },
    {
      "Start": "1c2d3c410d204c878b300797632015fb",
      "End": "6927f860174c4bd59bd4459ac4c74435",
      "Id": "16b7700379e444c1b70d063077fed85d"
    },
    {
      "Start": "2d737e7fbf70404f9c00270533eaa8b4",
      "End": "3e75097e8d5d4c7f9eb2ae64f989d3ba",
      "Id": "e91ed97fc38348bfb8ece7aad5832bbe"
    },
    {
      "Start": "7169165aa7d549f1b42a10ee107a6d08",
      "End": "3388ba023d8c463883752abfe6657dad",
      "Id": "87d1dab728964793978cb4200ca32007"
    },
    {
      "Start": "7169165aa7d549f1b42a10ee107a6d08",
      "End": "1bec2a5a21a2455db269f8f260d4fe22",
      "Id": "00bc3798b2b24d66bd659c1a6ed34671"
    },
    {
      "Start": "547ff51b562e4ddeaff7bdb7be247254",
      "End": "3636d85bedec4f7bbf1aa6531d8467c7",
      "Id": "0087883d9d3b424091e8b235276e98f2"
    },
    {
      "Start": "e97c8ae1fd2149909fb56e42238fb4e0",
      "End": "943c99927aaa4997976840ce115003a9",
      "Id": "61a70611a1a74177bd725fb7a0213e99"
    },
    {
      "Start": "d845ec0ea42942d2bee95268d6b94315",
      "End": "fa9dbb1f6c184ee481e0f20ec4688ba8",
      "Id": "c9ca844fddfc4a418366e5f45f186e93"
    },
    {
      "Start": "0052c129850a451db1332edf52ef22c5",
      "End": "c33ae9b8d092439d86f3c5eacabc51ab",
      "Id": "8a318632d25c456f8557de49d5f323e2"
    },
    {
      "Start": "0052c129850a451db1332edf52ef22c5",
      "End": "df3cd8335ba246d1935e7e80e8d9ca72",
      "Id": "ef4edf88d973473e99c48f674eb15ebf"
    },
    {
      "Start": "0052c129850a451db1332edf52ef22c5",
      "End": "06db10feb58d4e2f8d0261f6006caaed",
      "Id": "34bb1aa4892447c4b6bdc0c1af0094ec"
    },
    {
      "Start": "967546d1b13b43c7ab9a4661e81e582d",
      "End": "8f17b10f3f6149a6af26468f7ee0f102",
      "Id": "db7fd6e1236e4d80a0065a79ef02f99e"
    },
    {
      "Start": "46661b27487a4ac28eadae06ee7ca343",
      "End": "c04e68bb487f4b88b6ba8fe11744222f",
      "Id": "656a5691d8b24abab6a6dd1f19d4593a"
    },
    {
      "Start": "cbd281d4475c41138f178482d71d6643",
      "End": "42e89b83dade4013a2f82a6c0abfc856",
      "Id": "15802849ebf44786a026d5b44cf7bd1d"
    },
    {
      "Start": "68485f4fed28410ab387caecd74ddd32",
      "End": "28071597c7c34440a4beea11b4bfd079",
      "Id": "5e8c9566417b44bc994f10f3d414f8b2"
    },
    {
      "Start": "60a558d0d43949c38e6d480ea1e3dc64",
      "End": "65761d04df6d4500b70955408c4c4a97",
      "Id": "c009b24112c246e4b8ba01efbfac9168"
    },
    {
      "Start": "9094f3cd79de4f52b14f7a52f567c0de",
      "End": "b31dbdb4b48a4818b790cbab08b0f47d",
      "Id": "f47f5f269bc54d53bda42b9f74a06d6c"
    },
    {
      "Start": "e3f4900d80964c4daf3c37179cb34189",
      "End": "735422e4fab446a3bdea633fd227794e",
      "Id": "08cedd4ad4da412cb6934b69198cc6e0"
    },
    {
      "Start": "1cc897d558aa4aeaa63b5b1d3e7a7be6",
      "End": "f4d84d6aefba4cb08061b8dc3b693004",
      "Id": "5b3e2f8a65f648419cf4015821033d19"
    },
    {
      "Start": "e9c35bec1d13491ca6fb0d885db45972",
      "End": "92e87face89240bd8f37292ab89bfd17",
      "Id": "84cb8e2c25a7482294b7d365a801c012"
    },
    {
      "Start": "cdb14477e3264fb49371ae5d404900db",
      "End": "1867b74a55244da6a1becdb52d967285",
      "Id": "fcfd364ae7e748f28eb797141a77977f"
    },
    {
      "Start": "7d1d634599eb49aaad36cb8a0d919fb9",
      "End": "843342567c4c402a93601894366f3df4",
      "Id": "0a2081fcd71245208590f3dc9378390b"
    },
    {
      "Start": "4188fce453b34c94aba9a64f165f75e5",
      "End": "69cca4395e81421a9c992a89403918d0",
      "Id": "380a9c54b6a74cd6ad1df1cc5ae3268a"
    },
    {
      "Start": "0bd76d2d73fe40c2b73b5dffd2a9c2a0",
      "End": "c5165b66955f49c4ae370fb71c07cce1",
      "Id": "024b0fd8151449ef94aabe506d67dd7c"
    },
    {
      "Start": "2b56471a9adf4f769af9f6ffc7ae35ab",
      "End": "4fb613d0f9f54238834d7a0918d4f667",
      "Id": "be437f595e96438cbfff809722ce88c7"
    },
    {
      "Start": "04c02122df944311a5933c1a73e2e8ab",
      "End": "9a20700a23414a5280b68487ce17d442",
      "Id": "e22b1ce20a664ad795331e9b8aad7d7d"
    },
    {
      "Start": "637435ffcb484265a7cbafe4a5d967cc",
      "End": "11ee54d85ab641c990019d4e4acfa5f2",
      "Id": "a9056754615b4127830b8d1eccff2dbe"
    },
    {
      "Start": "60a01739d659405ba4b01f379032bcf3",
      "End": "6100b0519ebb4843b2807d33d4e2ee69",
      "Id": "015d428a443346b7998704c199704f30"
    },
    {
      "Start": "60a01739d659405ba4b01f379032bcf3",
      "End": "4d0859e27f744fa79199c2b2b7dcf3c2",
      "Id": "1b80eb9666ce43c78a22b481d42ab520"
    },
    {
      "Start": "60a01739d659405ba4b01f379032bcf3",
      "End": "f9401b45f2534be19d314cb6dcb87b59",
      "Id": "1f9aef95834d4fc5ab86faa0405b02d5"
    },
    {
      "Start": "019114f629a14ef1906d17905d4fa5e3",
      "End": "168467f5eaee4b08a857be0fc9095cca",
      "Id": "732244086a4a4897be4005c4a8f3bc87"
    },
    {
      "Start": "019114f629a14ef1906d17905d4fa5e3",
      "End": "f7a12e479fcc4f07aa1bd6972395bd41",
      "Id": "33265309ec3447cab6c9939a3b6bc470"
    },
    {
      "Start": "b7cdfc7aa5d04c40ab462c2fd04e08ac",
      "End": "e140d70f84004654a8a0586d24693a8e",
      "Id": "b1d2724f3de141aab2a320169a3fd7d4"
    },
    {
      "Start": "130035679ff74216a873d82cae6bd47e",
      "End": "7de1fca4ae0842899e0af24c0220c565",
      "Id": "5529152cf30d4147a7d991b9459974e9"
    },
    {
      "Start": "f1b103a343ca4e50a6c6f29e27abec8f",
      "End": "a7e07a6c1e084346b5c725865c09a199",
      "Id": "afd7db680a0c4439bebf0f965f26d90d"
    },
    {
      "Start": "0f7dbba36486477c93c764dcc98bba30",
      "End": "3057e660e31f457e867f0a829cb02206",
      "Id": "bff9997d70bc4f5e9b5743103ef15b2b"
    },
    {
      "Start": "a8d5805c5ac144dfaddefcd4c8756830",
      "End": "7894b677c46a41dc8ee63212fe9cc464",
      "Id": "a54fab9286cf47d0962f5b4bc7b0f140"
    },
    {
      "Start": "0852196ac9574b32a7e0f0be2dbd5f01",
      "End": "75dbb75f8a2541108a5872244668cd0a",
      "Id": "fb46ab9fed3d4566935d05ef457e53c7"
    },
    {
      "Start": "31646b15c7e74ad79fd2d25a1a2ef940",
      "End": "c257754fc8e249a1af13fc61a04b559e",
      "Id": "58eaccb6224b4e9da43d5e4e52efdcc9"
    },
    {
      "Start": "07b8285f7e99447aaf9792c4f62f7f00",
      "End": "0861951efa654b599053dca62d16a36f",
      "Id": "e706ad32b61948f7b1d4b636d08d384d"
    },
    {
      "Start": "c935ee18e73c45b4a855bb36b2458782",
      "End": "3b8c28301bf34d74a28fdb21677e1254",
      "Id": "cc92f21a70d5412fa4a2c060b24ab02d"
    },
    {
      "Start": "0708e0e40c414d88bed1e822f6d48d19",
      "End": "2ecc18440c684f198fc2110318fd575b",
      "Id": "48ad6cb7a82a4a9a87a5475c10daf87a"
    },
    {
      "Start": "19b43f3c9a2e4ccb8cefdc93ebded593",
      "End": "34c7dac0a5fe44d1b69c4e5ef0ebea7e",
      "Id": "35f4e3371ad0466aa5eb744c87107ee2"
    },
    {
      "Start": "5779de4abb3142c9b6bc668a5d94de56",
      "End": "c5b8c65f8fed425db7efd740c5a1e792",
      "Id": "502eec64067446e483ae56b08ed752dc"
    },
    {
      "Start": "1839bc98431a407bafa9a3b1412aff8c",
      "End": "b83158c41eb145388a24575f6ef44bcd",
      "Id": "a5185edaca56446fa197503d8661454e"
    },
    {
      "Start": "31a1a8114c794638999290cabe92014e",
      "End": "23cbdeaf45f24394ba37a60075750b73",
      "Id": "0e2dd23c661b4d2bb1e6d96dc8e06eea"
    }
  ],
  "Dependencies": [
    "1e768134-b4c4-4605-a428-b2929598b21b"
  ],
  "NodeLibraryDependencies": [],
  "Bindings": [
    {
      "NodeId": "61617e14-4eac-42f6-ba92-114e04564cf9",
      "Binding": {
        "ByElevationAndName_InClassDecl-1_InFunctionScope-1_Instance0_61617e14-4eac-42f6-ba92-114e04564cf9": ""
      }
    },
    {
      "NodeId": "1bcce36c-7ea3-4c70-9271-544fd378ec41",
      "Binding": {
        "ByOutlineTypeAndLevel_InClassDecl-1_InFunctionScope-1_Instance0_1bcce36c-7ea3-4c70-9271-544fd378ec41": ""
      }
    },
    {
      "NodeId": "fdc9add4-7e47-40d3-ba57-72e349b53aa0",
      "Binding": {
        "ByPoints_InClassDecl-1_InFunctionScope-1_Instance0_fdc9add4-7e47-40d3-ba57-72e349b53aa0": ""
      }
    }
  ],
  "View": {
    "Dynamo": {
      "ScaleFactor": 1.0,
      "HasRunWithoutCrash": true,
      "IsVisibleInDynamoLibrary": true,
      "Version": "2.5.2.7915",
      "RunType": "Manual",
      "RunPeriod": "100"
    },
    "Camera": {
      "Name": "Background Preview",
      "EyeX": -17.0,
      "EyeY": 24.0,
      "EyeZ": 50.0,
      "LookX": 12.0,
      "LookY": -13.0,
      "LookZ": -58.0,
      "UpX": 0.0,
      "UpY": 1.0,
      "UpZ": 0.0
    },
    "NodeViews": [
      {
        "ShowGeometry": false,
        "Name": "Ellipse.ByOriginRadii",
        "Id": "df50c731453648a8af5df8110470ce5d",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 85.3848425978775,
        "Y": 10.7576218622244
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "687da7274c0d4a2cbdd9e8a4ebc11e9f",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -315.800814939077,
        "Y": 8.41330624938732
      },
      {
        "ShowGeometry": true,
        "Name": "Surface.ByLoft",
        "Id": "1dd7c86864d14b18a8278f28ba42fff8",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 295.293762111202,
        "Y": 30.0177655378816
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "0828c18c466342a2a7133bb4cdf310c6",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -1046.20315813764,
        "Y": 439.235193057258
      },
      {
        "ShowGeometry": true,
        "Name": "Number Slider",
        "Id": "32a73dc149434c339177290ea57c2b2b",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -1440.1654474104,
        "Y": 250.823076614742
      },
      {
        "ShowGeometry": true,
        "Name": "Point.ByCoordinates",
        "Id": "0d27cc6dec26449b8fb044507412d8e3",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 156.909882585775,
        "Y": 185.099582127578
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "17da1ec7f9fd4150b63081686a5072fb",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -1444.89148637736,
        "Y": 416.645145837956
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "35e15b45c97c49c48ece41b8936e65ea",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -829.5666330169,
        "Y": 344.100938231694
      },
      {
        "ShowGeometry": true,
        "Name": "List.AddItemToFront",
        "Id": "9ddaf020469f4978bdc3c3a4f25575b4",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -725.821367318018,
        "Y": 393.533415340371
      },
      {
        "ShowGeometry": true,
        "Name": "Plane.ByOriginNormal",
        "Id": "bab9680dbc9b401bb3863f747bba7fef",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 351.397711255458,
        "Y": 256.501536467636
      },
      {
        "ShowGeometry": true,
        "Name": "Vector.ZAxis",
        "Id": "56f121c92a284267acb587410c134853",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 203.315151363468,
        "Y": 326.669082887487
      },
      {
        "ShowGeometry": true,
        "Name": "Geometry.Intersect",
        "Id": "ee32c3002e704fbd91e7647a3d398165",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 567.597297059344,
        "Y": 139.428953372087
      },
      {
        "ShowGeometry": true,
        "Name": "Floor Types",
        "Id": "d5691294898b4cb6adcca5dc739122e6",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1599.11927010706,
        "Y": 499.900223461202
      },
      {
        "ShowGeometry": true,
        "Name": "List.Flatten",
        "Id": "9673206b20d24a4d802d0dea535f3b97",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 801.465243562939,
        "Y": 146.122601768799
      },
      {
        "ShowGeometry": true,
        "Name": "Level.ByElevationAndName",
        "Id": "61617e144eac42f6ba92114e04564cf9",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1213.92913654673,
        "Y": 797.317356877904
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "bf0f7c712f944d47b4ac5a0f5d5735cc",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 163.820466000301,
        "Y": 888.739158843482
      },
      {
        "ShowGeometry": true,
        "Name": "List.Count",
        "Id": "4603f9e930254507946395acb711e5d3",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 43.0855143461249,
        "Y": 891.496537692609
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "6056a56cbaa84f6aad355c68be985429",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 453.356748892059,
        "Y": 797.797809565766
      },
      {
        "ShowGeometry": true,
        "Name": "List.AddItemToFront",
        "Id": "7ada4d19809c479fa21f9c56f2fc1618",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 547.834480170228,
        "Y": 849.50761680325
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "ab2f98f161ca4ef69ef738b1e75b40ad",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 745.838985803801,
        "Y": 796.301810507243
      },
      {
        "ShowGeometry": true,
        "Name": "String.Concat",
        "Id": "ac182ff6b5054c28a7957740e7333033",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 863.777962372405,
        "Y": 803.332927444524
      },
      {
        "ShowGeometry": true,
        "Name": "List.Map",
        "Id": "81efbd9ab55e4012903593eb42fcd2c2",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1057.02894654303,
        "Y": 859.918041786687
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "1d4d7beb9ecb4e5c9eb0d610b08f028c",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 933.36377470563,
        "Y": 224.298744488801
      },
      {
        "ShowGeometry": true,
        "Name": "Floor.ByOutlineTypeAndLevel",
        "Id": "1bcce36c7ea34c709271544fd378ec41",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1915.93468369535,
        "Y": 463.654624563363
      },
      {
        "ShowGeometry": false,
        "Name": "Curve.PointAtParameter",
        "Id": "808124fa42bb480eba78a8ccdbff706e",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1062.02374436739,
        "Y": 173.737641749471
      },
      {
        "ShowGeometry": false,
        "Name": "PolyCurve.ByPoints",
        "Id": "8ae615cf96a043b1b18d5711df8642d9",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1272.46315249339,
        "Y": 177.85476335587
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "db407934abcc4598ba4893b716e56887",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 708.51589901463581,
        "Y": -490.96554296347318
      },
      {
        "ShowGeometry": true,
        "Name": "AdaptiveComponent.ByPoints",
        "Id": "fdc9add47e4740d3ba5772e349b53aa0",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1371.34872402373,
        "Y": -433.26294934591
      },
      {
        "ShowGeometry": true,
        "Name": "Family Types",
        "Id": "87dbdc09469f42b6a69662d22c3196b3",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 939.610376746049,
        "Y": -340.151244524123
      },
      {
        "ShowGeometry": true,
        "Name": "Element.OverrideColorInView",
        "Id": "d986daaceae14e80943044527fcb133e",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2659.9920543818,
        "Y": -366.743801705167
      },
      {
        "ShowGeometry": true,
        "Name": "File Path",
        "Id": "e0971bd156084659a4dd839292455472",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1637.33971305141,
        "Y": -704.50850826195
      },
      {
        "ShowGeometry": true,
        "Name": "List.Chop",
        "Id": "53a7d94ef49a459487de5659e81e317c",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2273.53090464112,
        "Y": -586.482774822666
      },
      {
        "ShowGeometry": true,
        "Name": "List.Transpose",
        "Id": "f446efcabbb147bcbdb2f99dc5f88a28",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2167.27579680149,
        "Y": -371.818808619358
      },
      {
        "ShowGeometry": true,
        "Name": "List.Flatten",
        "Id": "704e87d9cab04108bfd1035e12f40143",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2334.50298927031,
        "Y": -371.818808619358
      },
      {
        "ShowGeometry": true,
        "Name": "String from Object",
        "Id": "6cee59e96a284b778c5f5854cc5c389f",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 393.253307050909,
        "Y": 1015.06952324932
      },
      {
        "ShowGeometry": true,
        "Name": "File.FromPath",
        "Id": "ecd704fa11734b74bd580162dedd5dc5",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1935.3421391127,
        "Y": -487.702568663174
      },
      {
        "ShowGeometry": true,
        "Name": "Image.ReadFromFile",
        "Id": "34a8cbb11d8844be823dff761a7f8bb8",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2110.27273431812,
        "Y": -714.758947288399
      },
      {
        "ShowGeometry": true,
        "Name": "Image.Pixels",
        "Id": "c921a57cb7c7417fa5a46ac605ebfde4",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2079.35065940807,
        "Y": -570.750426993023
      },
      {
        "ShowGeometry": true,
        "Name": "UVQuadsonSurface",
        "Id": "8bd20cf7418f4b83a33dd5c569271224",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 884.354331459109,
        "Y": -632.784404100946
      },
      {
        "ShowGeometry": true,
        "Name": "List.Transpose",
        "Id": "d385112fb76a4937acb9afebe4824e61",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1145.7919777984582,
        "Y": -702.755840577193
      },
      {
        "ShowGeometry": true,
        "Name": "List.Transpose",
        "Id": "0bfd58334a024aadbc08e973e80e95a8",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1177.2869657264337,
        "Y": -528.38220513976512
      },
      {
        "ShowGeometry": true,
        "Name": "List.Flatten",
        "Id": "25aa4d1ca1db434db40a90bbef69a027",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2942.2585108474004,
        "Y": -382.00702167804775
      }
    ],
    "Annotations": [
      {
        "Id": "645e47ff4a9b4295b9cbcbc71f54401d",
        "Title": "Floor elevations",
        "Nodes": [],
        "Left": -725.400333741058,
        "Top": 357.716754522334,
        "Width": 0.0,
        "Height": 0.0,
        "FontSize": 36.0,
        "InitialTop": 0.0,
        "InitialHeight": 0.0,
        "TextblockHeight": 0.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "2ff8005dc7b549ec9e013b0a39d8efc1",
        "Title": "Approximate curve by many-sided polygons",
        "Nodes": [],
        "Left": 1268.62285964199,
        "Top": 138.467305333858,
        "Width": 0.0,
        "Height": 0.0,
        "FontSize": 36.0,
        "InitialTop": 0.0,
        "InitialHeight": 0.0,
        "TextblockHeight": 0.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "acd690c7390c448f8dd9645732fe83be",
        "Title": "Ellipses",
        "Nodes": [],
        "Left": 804.492422537978,
        "Top": 101.237297748669,
        "Width": 0.0,
        "Height": 0.0,
        "FontSize": 36.0,
        "InitialTop": 0.0,
        "InitialHeight": 0.0,
        "TextblockHeight": 0.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "04a6e0633bb54573a8c8792facd27dcb",
        "Title": "Make levels",
        "Nodes": [],
        "Left": 44.1716364577037,
        "Top": 759.246149582949,
        "Width": 0.0,
        "Height": 0.0,
        "FontSize": 36.0,
        "InitialTop": 0.0,
        "InitialHeight": 0.0,
        "TextblockHeight": 0.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "cececc3442454f70bc8bee981639c0cb",
        "Title": "Place panels in Revit",
        "Nodes": [],
        "Left": 868.992651780173,
        "Top": -536.198892778168,
        "Width": 0.0,
        "Height": 0.0,
        "FontSize": 36.0,
        "InitialTop": 0.0,
        "InitialHeight": 0.0,
        "TextblockHeight": 0.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "4c06461fcc3543728e0497ef35406b8a",
        "Title": "Navigate to \"rainbow colors\" in the samples folder",
        "Nodes": [],
        "Left": 1637.33971305141,
        "Top": -749.67332182977,
        "Width": 0.0,
        "Height": 0.0,
        "FontSize": 36.0,
        "InitialTop": 0.0,
        "InitialHeight": 0.0,
        "TextblockHeight": 0.0,
        "Background": "#FFC1D676"
      }
    ],
    "X": -1283.9385082567028,
    "Y": 553.74121518814763,
    "Zoom": 0.535961915801385
  }
}