{
  "Uuid": "3c9d0464-8643-5ffe-96e5-ab1769818209",
  "IsCustomNode": false,
  "Description": "",
  "Name": "03 Ellipse Tower v3",
  "ElementResolver": {
    "ResolutionMap": {
      "Point": {
        "Key": "Autodesk.DesignScript.Geometry.Point",
        "Value": "ProtoGeometry.dll"
      }
    }
  },
  "Inputs": [],
  "Outputs": [],
  "Nodes": [
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Ellipse.ByOriginRadii@Autodesk.DesignScript.Geometry.Point,double,double",
      "Id": "df50c731453648a8af5df8110470ce5d",
      "Inputs": [
        {
          "Id": "f479bbc7c15d4bf59e8ee5dbae5c46be",
          "Name": "origin",
          "Description": "Point\nDefault value : Autodesk.DesignScript.Geometry.Point.ByCoordinates(0, 0, 0) (disabled)",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "f6d9059b989649b5a5dee85ea6e4ccc9",
          "Name": "xAxisRadius",
          "Description": "double\nDefault value : 1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "4c33d0e24a994e4198640c81db8603b2",
          "Name": "yAxisRadius",
          "Description": "double\nDefault value : 1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "214fd2be34874e46b3e2fddfb4fe8f1a",
          "Name": "Ellipse",
          "Description": "Ellipse",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Create an Ellipse centered at input Point, aligned with WCS XY Plane, with specified X and Y axis radii.\n\nEllipse.ByOriginRadii (origin: Point = Autodesk.DesignScript.Geometry.Point.ByCoordinates(0, 0, 0), xAxisRadius: double = 1, yAxisRadius: double = 1): Ellipse"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "Point.ByCoordinates(0,0,[0,30,height]);\n[10,8,12];\n[20,12,17];",
      "Id": "687da7274c0d4a2cbdd9e8a4ebc11e9f",
      "Inputs": [
        {
          "Id": "09309ffbc4c04772a4223ff8f12f4def",
          "Name": "height",
          "Description": "height",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "d59c97be9db44012876c686b661add06",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "f056da05ae384be1bb120a1be324af60",
          "Name": "",
          "Description": "Value of expression at line 2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "ef1977a762f5419ba85542a30ddae6ea",
          "Name": "",
          "Description": "Value of expression at line 3",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Surface.ByLoft@Autodesk.DesignScript.Geometry.Curve[]",
      "Id": "1dd7c86864d14b18a8278f28ba42fff8",
      "Inputs": [
        {
          "Id": "65c2cd081b384bba94f07aa67ff0e75d",
          "Name": "crossSections",
          "Description": "Curve[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "86353e81737e46c3b986342ede8bdf96",
          "Name": "Surface",
          "Description": "Surface",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Create a Surface by lofting between input cross section Curves.\n\nSurface.ByLoft (crossSections: Curve[]): Surface"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "secondFloor..height..3.5;",
      "Id": "0828c18c466342a2a7133bb4cdf310c6",
      "Inputs": [
        {
          "Id": "3ef118c4eb9f4282afb7e804711b1bc3",
          "Name": "secondFloor",
          "Description": "secondFloor",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "c93af706876341d7aee610e6c8053ee2",
          "Name": "height",
          "Description": "height",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "251347ac286a4c98a202936d427ebaf8",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.DoubleSlider, CoreNodeModels",
      "NodeType": "NumberInputNode",
      "NumberType": "Double",
      "MaximumValue": 100.0,
      "MinimumValue": 0.0,
      "StepValue": 0.1,
      "InputValue": 50.0,
      "Id": "32a73dc149434c339177290ea57c2b2b",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "e2920369a5304be4ba0456df9dfe6827",
          "Name": "",
          "Description": "Double",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "A slider that produces numeric values."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Point.ByCoordinates@double,double,double",
      "Id": "0d27cc6dec26449b8fb044507412d8e3",
      "Inputs": [
        {
          "Id": "e2395c14ba0a455883e244d731ebcfe0",
          "Name": "x",
          "Description": "double\nDefault value : 0",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "e0d94d5b294c4f5dbbf351fe23cd9478",
          "Name": "y",
          "Description": "double\nDefault value : 0",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "65ad054ae55643c19ee437d0a1327384",
          "Name": "z",
          "Description": "double\nDefault value : 0",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "0501351c30c84c06ba51e7c973b47fbc",
          "Name": "Point",
          "Description": "Point",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Form a Point given 3 cartesian coordinates\n\nPoint.ByCoordinates (x: double = 0, y: double = 0, z: double = 0): Point"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "// first floor height\n8;",
      "Id": "17da1ec7f9fd4150b63081686a5072fb",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "a4c4c57a5d4843279919b197b66edec4",
          "Name": "",
          "Description": "Value of expression at line 2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "0;",
      "Id": "35e15b45c97c49c48ece41b8936e65ea",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "d5f92b78b9c848119d44fa6c77ef464f",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.AddItemToFront@var[]..[],var[]..[]",
      "Id": "9ddaf020469f4978bdc3c3a4f25575b4",
      "Inputs": [
        {
          "Id": "8952c278de7549b3be507fb1a41a0bad",
          "Name": "item",
          "Description": "Item to be added. Item could be an object or a list.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "e9dbfeeea1724c5e8b541a69f309289c",
          "Name": "list",
          "Description": "List to add on to.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "09d2b230a36a42e3802542dc65f71f91",
          "Name": "list",
          "Description": "New list.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Adds an item to the beginning of a list.\n\nList.AddItemToFront (item: var[]..[], list: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Plane.ByOriginNormal@Autodesk.DesignScript.Geometry.Point,Autodesk.DesignScript.Geometry.Vector",
      "Id": "bab9680dbc9b401bb3863f747bba7fef",
      "Inputs": [
        {
          "Id": "9113120af1e3449e81da0e942f81847f",
          "Name": "origin",
          "Description": "Point\nDefault value : Autodesk.DesignScript.Geometry.Point.ByCoordinates(0, 0, 0) (disabled)",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "2cfe2604706c4abbb892692621efc911",
          "Name": "normal",
          "Description": "Vector\nDefault value : Autodesk.DesignScript.Geometry.Vector.ByCoordinates(0, 0, 1) (disabled)",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "070e5eb4020e469389af3174f5bb5e0d",
          "Name": "Plane",
          "Description": "Plane",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Create a Plane centered at root Point, with input normal Vector.\n\nPlane.ByOriginNormal (origin: Point = Autodesk.DesignScript.Geometry.Point.ByCoordinates(0, 0, 0), normal: Vector = Autodesk.DesignScript.Geometry.Vector.ByCoordinates(0, 0, 1)): Plane"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Vector.ZAxis",
      "Id": "56f121c92a284267acb587410c134853",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "423eced6dc1c4edcb6e7284139a92f1a",
          "Name": "Vector",
          "Description": "Vector",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Get the canonical Z axis Vector (0,0,1)\n\nVector.ZAxis ( ): Vector"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Geometry.Intersect@Autodesk.DesignScript.Geometry.Geometry",
      "Id": "ee32c3002e704fbd91e7647a3d398165",
      "Inputs": [
        {
          "Id": "82a1d519c07448f3ac943246c88d6396",
          "Name": "geometry",
          "Description": "Autodesk.DesignScript.Geometry.Geometry",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "21675f0f4ea64c168e683d51535faca6",
          "Name": "other",
          "Description": "Geometry",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "8d8738d6c2484f45a4bd8b12312a253b",
          "Name": "Geometry[]",
          "Description": "Geometry[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Get the intersection Geometry for this object and another\n\nGeometry.Intersect (other: Geometry): Geometry[]"
    },
    {
      "ConcreteType": "DSRevitNodesUI.FloorTypes, DSRevitNodesUI",
      "SelectedIndex": 4,
      "SelectedString": "LW Concrete on Metal Deck",
      "NodeType": "ExtensionNode",
      "Id": "d5691294898b4cb6adcca5dc739122e6",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "3bdc706098ba43f08c69b083954a59ea",
          "Name": "Floor Type",
          "Description": "The selected Floor Type",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "All floor types available in the document."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "9673206b20d24a4d802d0dea535f3b97",
      "Inputs": [
        {
          "Id": "588632288a9448508288b5e725ef0691",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "5144226633844adb82630a91856854e2",
          "Name": "amt",
          "Description": "Layers of nesting to remove.\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "2be1239e57d34c358408a665a81d4a52",
          "Name": "var[]..[]",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amt: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.Level.ByElevationAndName@double,string",
      "Id": "61617e144eac42f6ba92114e04564cf9",
      "Inputs": [
        {
          "Id": "f1f13226b54346cbadf4f40607eca2fa",
          "Name": "elevation",
          "Description": "double",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "90d8a49892904c3ea48874904ac75ffa",
          "Name": "name",
          "Description": "string",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "0513c712fd23408f813dd1793cc48e29",
          "Name": "Level",
          "Description": "Level",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Create a Revit Level given it's elevation and name in the project\n\nLevel.ByElevationAndName (elevation: double, name: string): Level"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "2..numFloors;",
      "Id": "bf0f7c712f944d47b4ac5a0f5d5735cc",
      "Inputs": [
        {
          "Id": "97f25bcc74104e41b3f1e45b13aab6cf",
          "Name": "numFloors",
          "Description": "numFloors",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "f43c2f3e316a48f7b4a3ddb35852c66a",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Count@var[]..[]",
      "Id": "4603f9e930254507946395acb711e5d3",
      "Inputs": [
        {
          "Id": "cf026f0c735b45939bf46e47cd09679e",
          "Name": "list",
          "Description": "List to get the item count of.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "c1f655fcf7204788b9c34a4f8c4e8244",
          "Name": "count",
          "Description": "List length.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the number of items stored in the given list.\n\nList.Count (list: var[]..[]): int"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "\"G\";",
      "Id": "6056a56cbaa84f6aad355c68be985429",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "bcbb3b50b98945239e0aa4bcefd03ad8",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.AddItemToFront@var[]..[],var[]..[]",
      "Id": "7ada4d19809c479fa21f9c56f2fc1618",
      "Inputs": [
        {
          "Id": "a29efbd9bc6b4d7193bfd061ae08a9b3",
          "Name": "item",
          "Description": "Item to be added. Item could be an object or a list.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "ab38f9a8e12b44ba9c6adb37c6b2379b",
          "Name": "list",
          "Description": "List to add on to.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "598cf29699af41fbb00d18d5836cb3ec",
          "Name": "list",
          "Description": "New list.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Adds an item to the beginning of a list.\n\nList.AddItemToFront (item: var[]..[], list: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "\"Lvl \";",
      "Id": "ab2f98f161ca4ef69ef738b1e75b40ad",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "f4dc8e45a067471aa6330fd485e99d12",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSVarArgFunction, DynamoCore",
      "FunctionSignature": "DSCore.String.Concat@string[]",
      "FunctionType": "VariableArgument",
      "NodeType": "FunctionNode",
      "Id": "ac182ff6b5054c28a7957740e7333033",
      "Inputs": [
        {
          "Id": "c934ce89b4de493bb53ecb694a6fce12",
          "Name": "string0",
          "Description": "List of strings to concatenate.\n\nstring[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "c29e2491b67f4fee972a5cc00ce11e90",
          "Name": "string1",
          "Description": "string[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "c8b332b7a65d4be596b8b004affc718c",
          "Name": "str",
          "Description": "String made from list of strings.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Concatenates multiple strings into a single string.\n\nString.Concat (strings: string[]): string"
    },
    {
      "ConcreteType": "CoreNodeModels.HigherOrder.Map, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "81efbd9ab55e4012903593eb42fcd2c2",
      "Inputs": [
        {
          "Id": "9ed0851e10ca4596a9dd18862c71f094",
          "Name": "list",
          "Description": "The list to map over.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "be477e88f55b42f4bdf95530e19bb37f",
          "Name": "f(x)",
          "Description": "The procedure used to map element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "713dd4b1395b481ea88d55bc69fb1875",
          "Name": "mapped",
          "Description": "Mapped list",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Applies a function over all elements of a list, generating a new list from the results."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "0..1..#40;",
      "Id": "1d4d7beb9ecb4e5c9eb0d610b08f028c",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "937d48bce2fd40399c338cdf3f976968",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.Floor.ByOutlineTypeAndLevel@Autodesk.DesignScript.Geometry.PolyCurve,Revit.Elements.FloorType,Revit.Elements.Level",
      "Id": "1bcce36c7ea34c709271544fd378ec41",
      "Inputs": [
        {
          "Id": "37abbe7dfe7445c084b153a58f87dd88",
          "Name": "outline",
          "Description": "PolyCurve",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "61e5fdbd44e74552a93ef1eb113887de",
          "Name": "floorType",
          "Description": "FloorType",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "af84a0a7789d444286ac2f8ab568fe97",
          "Name": "level",
          "Description": "Level",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "e44981fcb31d47729007517a3948384a",
          "Name": "Floor",
          "Description": "The floor",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Create a Revit Floor given its curve outline and Level\n\nFloor.ByOutlineTypeAndLevel (outline: PolyCurve, floorType: FloorType, level: Level): Floor"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Curve.PointAtParameter@double",
      "Id": "808124fa42bb480eba78a8ccdbff706e",
      "Inputs": [
        {
          "Id": "1c87b9a13f6d406a8a5611da539c9114",
          "Name": "curve",
          "Description": "Autodesk.DesignScript.Geometry.Curve",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "52a3b7e9e5e84e629c0d40c1139388a0",
          "Name": "param",
          "Description": "The parameter at which to evaluate\n\ndouble\nDefault value : 0",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "03617141fa5d469eb09a8d53a1abafab",
          "Name": "Point",
          "Description": "Point",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "CrossProduct",
      "Description": "Get a Point on the Curve at a specified parameter between StartParameter() and EndParameter()\n\nCurve.PointAtParameter (param: double = 0): Point"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.PolyCurve.ByPoints@Autodesk.DesignScript.Geometry.Point[],bool",
      "Id": "8ae615cf96a043b1b18d5711df8642d9",
      "Inputs": [
        {
          "Id": "90b03ae8f49649feb4997f007cd203d3",
          "Name": "points",
          "Description": "Points to make polycurve\n\nPoint[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "7812fba91c8443dd87d0bbf552b76764",
          "Name": "connectLastToFirst",
          "Description": "make close or open polycurve\n\nbool\nDefault value : false",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "d98d6c2f252f4242af86910b293fb320",
          "Name": "PolyCurve",
          "Description": "PolyCurve",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Make PolyCurve by connecting points. Set the 'connectLastToFirst' input to true to close the PolyCurve.\n\nPolyCurve.ByPoints (points: Point[], connectLastToFirst: bool = false): PolyCurve"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "10;\n15;",
      "Id": "db407934abcc4598ba4893b716e56887",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "806bb12ad520490d87167c2be1fd1d4f",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "296e162e2eb4479b8f6ddc0b011495f7",
          "Name": "",
          "Description": "Value of expression at line 2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.AdaptiveComponent.ByPoints@Autodesk.DesignScript.Geometry.Point[][],Revit.Elements.FamilyType",
      "Id": "fdc9add47e4740d3ba5772e349b53aa0",
      "Inputs": [
        {
          "Id": "d88e914cb1bd4fed9984477c3a2acad1",
          "Name": "points",
          "Description": "a two-dimensional array of points\n\nPoint[][]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "32b137f04b5f4aa08ac29db78e855b19",
          "Name": "familyType",
          "Description": "a family type to use to create the adaptive components\n\nFamilyType",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "de94cba52bab429fbf39d20b3414ac34",
          "Name": "AdaptiveComponent[]..[]",
          "Description": "AdaptiveComponent[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Create a list of adaptive components from two-dimensional array of points\n\nAdaptiveComponent.ByPoints (points: Point[][], familyType: FamilyType): AdaptiveComponent[]..[]"
    },
    {
      "ConcreteType": "DSRevitNodesUI.FamilyTypes, DSRevitNodesUI",
      "SelectedIndex": 19,
      "SelectedString": "deflectionPanel:deflectionPanel",
      "NodeType": "ExtensionNode",
      "Id": "87dbdc09469f42b6a69662d22c3196b3",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "dbb4a2959b024a7b83f1d03b37bd60df",
          "Name": "Family Type",
          "Description": "The selected Family Type",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "All family types available in the document."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.Element.OverrideColorInView@DSCore.Color",
      "Id": "d986daaceae14e80943044527fcb133e",
      "Inputs": [
        {
          "Id": "03dd46829994430caea7f486d32c9c8c",
          "Name": "element",
          "Description": "Revit.Elements.Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "d42b93224e824c159c540c8d3d5f92c5",
          "Name": "color",
          "Description": "The color to apply to a solid fill on the element.\n\nColor",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "a85f1d14f3824b15a15b93ea5aa6dd6c",
          "Name": "Element",
          "Description": "Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Override the element's color in the active view.\n\nElement.OverrideColorInView (color: Color): Element"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.Filename, CoreNodeModels",
      "HintPath": ".\\rainbowColors.jpg",
      "InputValue": ".\\rainbowColors.jpg",
      "NodeType": "ExtensionNode",
      "Id": "e0971bd156084659a4dd839292455472",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "a5ce3e4f5ca74c8e894a54f342f42fac",
          "Name": "",
          "Description": "Filename",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows you to select a file on the system to get its filename"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Chop@var[]..[],int[]",
      "Id": "53a7d94ef49a459487de5659e81e317c",
      "Inputs": [
        {
          "Id": "8aaf739e09fd4c57b8371d4b9b65dcec",
          "Name": "list",
          "Description": "List to chop into sublists\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "4f6fcf2607d040b9807aa18fff0fcff6",
          "Name": "lengths",
          "Description": "Lengths of consecutive sublists to be created from the input list\n\nint[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "ef483abc00f64b2daca3cfad030d19c8",
          "Name": "lists",
          "Description": "Sublists created from the list",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Chop a list into a set of consecutive sublists with the specified lengths. List division begins at the top of the list.\n\nList.Chop (list: var[]..[], lengths: int[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Transpose@var[]..[]",
      "Id": "f446efcabbb147bcbdb2f99dc5f88a28",
      "Inputs": [
        {
          "Id": "8dd20c83a2ad4baf899b7d9a1325d25a",
          "Name": "lists",
          "Description": "A list of lists to be transposed.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "d8ffe770f99c47ad9721904b7282d5ba",
          "Name": "lists",
          "Description": "A list of transposed lists.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Swaps rows and columns in a list of lists. If there are some rows that are shorter than others, null values are inserted as place holders in the resultant array such that it is always rectangular.\n\nList.Transpose (lists: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "704e87d9cab04108bfd1035e12f40143",
      "Inputs": [
        {
          "Id": "641f44cd97c44d06aa287d3e99b9198a",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "b2690436f5404f49ab021a5d55619ce4",
          "Name": "amt",
          "Description": "Layers of nesting to remove.\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "7312d7c31bc745fdb33e27692ebcdc54",
          "Name": "var[]..[]",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amt: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Transpose@var[]..[]",
      "Id": "473503b8e6f14893a3ae5e99941290a9",
      "Inputs": [
        {
          "Id": "9fbc433842b7457b88e8819628b95062",
          "Name": "lists",
          "Description": "A list of lists to be transposed.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "8cf63a0fbfbf440c99d4219eb533b612",
          "Name": "lists",
          "Description": "A list of transposed lists.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Swaps rows and columns in a list of lists. If there are some rows that are shorter than others, null values are inserted as place holders in the resultant array such that it is always rectangular.\n\nList.Transpose (lists: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "5e5344fdee964fc2ab2f47394f547a7e",
      "Inputs": [
        {
          "Id": "f9bf251a48874d48b74df6d00f85c6f5",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "8742b83e5c8b4ad680da30fc644a51cc",
          "Name": "amt",
          "Description": "Layers of nesting to remove.\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "2e65a2c10ef44480998c944ac37937da",
          "Name": "var[]..[]",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amt: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Chop@var[]..[],int[]",
      "Id": "e7483b57b94a480780a52e37bf1edc7f",
      "Inputs": [
        {
          "Id": "1b341b74830a47b79d8dff242538f702",
          "Name": "list",
          "Description": "List to chop into sublists\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "a7bde3802f104dcfaceebda183dc4a33",
          "Name": "lengths",
          "Description": "Lengths of consecutive sublists to be created from the input list\n\nint[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "442ad397f23545b99cf777d2f839950a",
          "Name": "lists",
          "Description": "Sublists created from the list",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Chop a list into a set of consecutive sublists with the specified lengths. List division begins at the top of the list.\n\nList.Chop (list: var[]..[], lengths: int[]): var[]..[]"
    },
    {
      "ConcreteType": "CoreNodeModels.FromObject, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "09e282cf8267436cbe10199d2c53ebe9",
      "Inputs": [
        {
          "Id": "dd0fea381f024d48ade5f85d6563299b",
          "Name": "obj",
          "Description": "Object to be serialized",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "5d3404a04f2443369e5abfe592b5a6d1",
          "Name": "str",
          "Description": "Result of math computation",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Convert an object to a string representation."
    },
    {
      "ConcreteType": "CoreNodeModels.Input.FileObject, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "743bcc53b85d4553a18a6a0ce808ae5e",
      "Inputs": [
        {
          "Id": "5eb9765555fb4e6b8c01d35b8dcdcc6f",
          "Name": "path",
          "Description": "Path to the file.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "68f8350539d24bcaab94eea9e007d9f5",
          "Name": "file",
          "Description": "File object",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a file object from a path."
    },
    {
      "ConcreteType": "CoreNodeModels.Input.FileObject, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "aa337df1a2474780a3026425bbcf5665",
      "Inputs": [
        {
          "Id": "0a69a15b8d404427baad67056b327f47",
          "Name": "path",
          "Description": "Path to the file.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "e9106d73df784aa7b98d0bd97faf2c48",
          "Name": "file",
          "Description": "File object",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a file object from a path."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.IO.Image.ReadFromFile@var",
      "Id": "c763b6c51aad4ceb81fecdd8605f776f",
      "Inputs": [
        {
          "Id": "a89b605d61564ff59616a9e2f6d9e1b5",
          "Name": "file",
          "Description": "File object to load image from.\n\nvar",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "ba898dbb62654bf7843eb91ff5521059",
          "Name": "image",
          "Description": "Image",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Loads the file as a bitmap.\n\nImage.ReadFromFile (file: var): var"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.IO.Image.Pixels@var,int,int",
      "Id": "624f78ec977e41639d250563d04676c2",
      "Inputs": [
        {
          "Id": "82308fc95c5f40448f4b6feb9cb1632d",
          "Name": "image",
          "Description": "The image to read.\n\nvar",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "9fdd8cddbb4b4eeeaf1945a286a56f1a",
          "Name": "xSamples",
          "Description": "Number of sample grid points in the X direction.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "4b692d73f5dd410d921f2c03676a22a1",
          "Name": "ySamples",
          "Description": "Number of sample grid points in the Y direction.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "6fdd389a3b9047d6a6f62d650f6bb10f",
          "Name": "colors",
          "Description": "Colors at the specified grid points.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Reads an image file and returns the color values at the specified grid locations.\n\nImage.Pixels (image: var, xSamples: int, ySamples: int): Color[][]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.IO.Image.ReadFromFile@var",
      "Id": "b720529e0add441094cd5d5bcd639c27",
      "Inputs": [
        {
          "Id": "cabb812e37ec4474adfd9cb9d428f25e",
          "Name": "file",
          "Description": "File object to load image from.\n\nvar",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "19d4794ae184474985a989763865db05",
          "Name": "image",
          "Description": "Image",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Loads the file as a bitmap.\n\nImage.ReadFromFile (file: var): var"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.IO.Image.Pixels@var,int,int",
      "Id": "dfbf69e9413d4d8ba7933caf4d96d84d",
      "Inputs": [
        {
          "Id": "4ce3200116e4424595aefce60d961e58",
          "Name": "image",
          "Description": "The image to read.\n\nvar",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "c52c447078554dee9caa1fcc1b6dcbd5",
          "Name": "xSamples",
          "Description": "Number of sample grid points in the X direction.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "e8e074e76f3249d0bb5afb79372b6d80",
          "Name": "ySamples",
          "Description": "Number of sample grid points in the Y direction.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "bd41efe1236e4789b7613bac9732dfdf",
          "Name": "colors",
          "Description": "Colors at the specified grid points.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Reads an image file and returns the color values at the specified grid locations.\n\nImage.Pixels (image: var, xSamples: int, ySamples: int): Color[][]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Function, DynamoCore",
      "FunctionSignature": "1e768134-b4c4-4605-a428-b2929598b21b",
      "FunctionType": "Graph",
      "NodeType": "FunctionNode",
      "Id": "576bc499e44648caba70dffa1c70dee6",
      "Inputs": [
        {
          "Id": "c2c53d147f4d402482f26a0c86206b29",
          "Name": "surface",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "0b751e12dbb64663971ad055586b7e5c",
          "Name": "u",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "611a8682a2cd430b9f23b1b3e19e941a",
          "Name": "v",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "2d1706675ab649c6a50e1047f79b3ddc",
          "Name": "Quad groups",
          "Description": "return value",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": ""
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Transpose@var[]..[]",
      "Id": "ce8369a914f4433782f10291bcc5bed7",
      "Inputs": [
        {
          "Id": "887f464ef3e843ddaa7fa626d44b939e",
          "Name": "lists",
          "Description": "A list of lists to be transposed.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "ac76f31852a04de393b2c94c276c0d13",
          "Name": "lists",
          "Description": "A list of transposed lists.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Swaps rows and columns in a list of lists. If there are some rows that are shorter than others, null values are inserted as place holders in the resultant array such that it is always rectangular.\n\nList.Transpose (lists: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Transpose@var[]..[]",
      "Id": "9ac2de4e833d4755843b056a872ff13c",
      "Inputs": [
        {
          "Id": "dc55355b3ba74c7f8233929d43c04146",
          "Name": "lists",
          "Description": "A list of lists to be transposed.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 3,
          "UseLevels": true,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "b375ffff51db4daf8f5064e90eecce10",
          "Name": "lists",
          "Description": "A list of transposed lists.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Swaps rows and columns in a list of lists. If there are some rows that are shorter than others, null values are inserted as place holders in the resultant array such that it is always rectangular.\n\nList.Transpose (lists: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "3b24760ecf804ef5b4006db08a25edb8",
      "Inputs": [
        {
          "Id": "625b9b9afe8448c6914d63e3d9e69dca",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "629e0ddcb96b469a98b141d7237e1967",
          "Name": "amt",
          "Description": "Layers of nesting to remove.\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "40a3324409674a0081c9acd8537e7adb",
          "Name": "var[]..[]",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amt: int = -1): var[]..[]"
    }
  ],
  "Connectors": [
    {
      "Start": "214fd2be34874e46b3e2fddfb4fe8f1a",
      "End": "65c2cd081b384bba94f07aa67ff0e75d",
      "Id": "eb8f5c64e0724d638d9ad641d6e889e4"
    },
    {
      "Start": "d59c97be9db44012876c686b661add06",
      "End": "f479bbc7c15d4bf59e8ee5dbae5c46be",
      "Id": "29ccc90470354e70b69e1b50614007f8"
    },
    {
      "Start": "f056da05ae384be1bb120a1be324af60",
      "End": "f6d9059b989649b5a5dee85ea6e4ccc9",
      "Id": "dba81987797b49ed9e9f5ef2a1be1fb9"
    },
    {
      "Start": "ef1977a762f5419ba85542a30ddae6ea",
      "End": "4c33d0e24a994e4198640c81db8603b2",
      "Id": "bd222532adf54fd08f58ee42a6af5c35"
    },
    {
      "Start": "86353e81737e46c3b986342ede8bdf96",
      "End": "82a1d519c07448f3ac943246c88d6396",
      "Id": "b83f0b9e6ee54f398154cb6ba75f85a8"
    },
    {
      "Start": "86353e81737e46c3b986342ede8bdf96",
      "End": "c2c53d147f4d402482f26a0c86206b29",
      "Id": "5e53ec23d23e4920b992ac8cb6f08571"
    },
    {
      "Start": "251347ac286a4c98a202936d427ebaf8",
      "End": "e9dbfeeea1724c5e8b541a69f309289c",
      "Id": "eef964ef6b214cf3bc2f5dee262b53eb"
    },
    {
      "Start": "e2920369a5304be4ba0456df9dfe6827",
      "End": "09309ffbc4c04772a4223ff8f12f4def",
      "Id": "8305c20a30bf417d883cf684feb70ac9"
    },
    {
      "Start": "e2920369a5304be4ba0456df9dfe6827",
      "End": "c93af706876341d7aee610e6c8053ee2",
      "Id": "b2e187c1f8ee45c1855130c39ab04370"
    },
    {
      "Start": "0501351c30c84c06ba51e7c973b47fbc",
      "End": "9113120af1e3449e81da0e942f81847f",
      "Id": "fbaae86f57114226a0b24a6e8d734891"
    },
    {
      "Start": "a4c4c57a5d4843279919b197b66edec4",
      "End": "3ef118c4eb9f4282afb7e804711b1bc3",
      "Id": "b58839b2b27345e7ac3d27695a74c70a"
    },
    {
      "Start": "d5f92b78b9c848119d44fa6c77ef464f",
      "End": "8952c278de7549b3be507fb1a41a0bad",
      "Id": "9c2fd8801ffa48699c9484e67b11c27e"
    },
    {
      "Start": "09d2b230a36a42e3802542dc65f71f91",
      "End": "65ad054ae55643c19ee437d0a1327384",
      "Id": "fbea70d9d372469cb29f2c00b47ae8f5"
    },
    {
      "Start": "09d2b230a36a42e3802542dc65f71f91",
      "End": "f1f13226b54346cbadf4f40607eca2fa",
      "Id": "d8917399a10b4af088841470a91fe2b0"
    },
    {
      "Start": "09d2b230a36a42e3802542dc65f71f91",
      "End": "cf026f0c735b45939bf46e47cd09679e",
      "Id": "95542506e44d431e988b3c9d81657ce4"
    },
    {
      "Start": "070e5eb4020e469389af3174f5bb5e0d",
      "End": "21675f0f4ea64c168e683d51535faca6",
      "Id": "d88713a7ef8f4ea8aaf498dade152fc2"
    },
    {
      "Start": "423eced6dc1c4edcb6e7284139a92f1a",
      "End": "2cfe2604706c4abbb892692621efc911",
      "Id": "9e33b52080494e749b92c14d9c9e20e9"
    },
    {
      "Start": "8d8738d6c2484f45a4bd8b12312a253b",
      "End": "588632288a9448508288b5e725ef0691",
      "Id": "6cdb63e17cfd4707a463db08845d8632"
    },
    {
      "Start": "3bdc706098ba43f08c69b083954a59ea",
      "End": "61e5fdbd44e74552a93ef1eb113887de",
      "Id": "7688b500ad704a07890519015e67614b"
    },
    {
      "Start": "2be1239e57d34c358408a665a81d4a52",
      "End": "1c87b9a13f6d406a8a5611da539c9114",
      "Id": "49100d9244f74c5490301a5bee64dc8d"
    },
    {
      "Start": "0513c712fd23408f813dd1793cc48e29",
      "End": "af84a0a7789d444286ac2f8ab568fe97",
      "Id": "2e77fa465cd04385973a6be4a25a12bf"
    },
    {
      "Start": "f43c2f3e316a48f7b4a3ddb35852c66a",
      "End": "dd0fea381f024d48ade5f85d6563299b",
      "Id": "2b742267210f43339e9e0c607f38a0e2"
    },
    {
      "Start": "c1f655fcf7204788b9c34a4f8c4e8244",
      "End": "97f25bcc74104e41b3f1e45b13aab6cf",
      "Id": "e6e2aabdbb81472fb510eb364568733c"
    },
    {
      "Start": "bcbb3b50b98945239e0aa4bcefd03ad8",
      "End": "a29efbd9bc6b4d7193bfd061ae08a9b3",
      "Id": "de004f3a29c740bd94d3ac424d47e151"
    },
    {
      "Start": "598cf29699af41fbb00d18d5836cb3ec",
      "End": "9ed0851e10ca4596a9dd18862c71f094",
      "Id": "d04eac678e5243ecb9e65d186ba6599f"
    },
    {
      "Start": "f4dc8e45a067471aa6330fd485e99d12",
      "End": "c934ce89b4de493bb53ecb694a6fce12",
      "Id": "1c3be3075090442eb20cb8385ad4ed83"
    },
    {
      "Start": "c8b332b7a65d4be596b8b004affc718c",
      "End": "be477e88f55b42f4bdf95530e19bb37f",
      "Id": "4cb85d2a6f8f4ec1837f1d6ad8264047"
    },
    {
      "Start": "713dd4b1395b481ea88d55bc69fb1875",
      "End": "90d8a49892904c3ea48874904ac75ffa",
      "Id": "df69644e0322421aaeb5f4fbb032a7b6"
    },
    {
      "Start": "937d48bce2fd40399c338cdf3f976968",
      "End": "52a3b7e9e5e84e629c0d40c1139388a0",
      "Id": "91c23521f8dc44d0a67769119a6bf740"
    },
    {
      "Start": "03617141fa5d469eb09a8d53a1abafab",
      "End": "90b03ae8f49649feb4997f007cd203d3",
      "Id": "a5295eb71c0e44999573042af7fda921"
    },
    {
      "Start": "d98d6c2f252f4242af86910b293fb320",
      "End": "37abbe7dfe7445c084b153a58f87dd88",
      "Id": "875141ae960c4983ad610546e8b5c92b"
    },
    {
      "Start": "806bb12ad520490d87167c2be1fd1d4f",
      "End": "4f6fcf2607d040b9807aa18fff0fcff6",
      "Id": "d2c3aa5b6e5148a3bc2666adb7c3b29f"
    },
    {
      "Start": "806bb12ad520490d87167c2be1fd1d4f",
      "End": "a7bde3802f104dcfaceebda183dc4a33",
      "Id": "204094b9318d49408f18d9d5cad2e7de"
    },
    {
      "Start": "806bb12ad520490d87167c2be1fd1d4f",
      "End": "9fdd8cddbb4b4eeeaf1945a286a56f1a",
      "Id": "caafaed3bc284f37bccb50593ba8aae1"
    },
    {
      "Start": "806bb12ad520490d87167c2be1fd1d4f",
      "End": "e8e074e76f3249d0bb5afb79372b6d80",
      "Id": "a3a9cbdeb1b64408ba02e829e95bd3c2"
    },
    {
      "Start": "806bb12ad520490d87167c2be1fd1d4f",
      "End": "0b751e12dbb64663971ad055586b7e5c",
      "Id": "6f91949d1b654e8f9dcae56b59dac319"
    },
    {
      "Start": "296e162e2eb4479b8f6ddc0b011495f7",
      "End": "4b692d73f5dd410d921f2c03676a22a1",
      "Id": "bb6072b18b8e4d3aaf60885d19a42bfa"
    },
    {
      "Start": "296e162e2eb4479b8f6ddc0b011495f7",
      "End": "c52c447078554dee9caa1fcc1b6dcbd5",
      "Id": "368acaabe1204b2c8105774e3eeb5a56"
    },
    {
      "Start": "296e162e2eb4479b8f6ddc0b011495f7",
      "End": "611a8682a2cd430b9f23b1b3e19e941a",
      "Id": "2f92769537bc4d53bedc7d18694e7cae"
    },
    {
      "Start": "de94cba52bab429fbf39d20b3414ac34",
      "End": "03dd46829994430caea7f486d32c9c8c",
      "Id": "95d2b2c1903e4a86be00b2ee4c498c4c"
    },
    {
      "Start": "dbb4a2959b024a7b83f1d03b37bd60df",
      "End": "32b137f04b5f4aa08ac29db78e855b19",
      "Id": "cdc5c5335a6d4bc787b2d12042df3753"
    },
    {
      "Start": "a85f1d14f3824b15a15b93ea5aa6dd6c",
      "End": "625b9b9afe8448c6914d63e3d9e69dca",
      "Id": "e1281b53c1b54a9cbceb6b380671dab6"
    },
    {
      "Start": "a5ce3e4f5ca74c8e894a54f342f42fac",
      "End": "5eb9765555fb4e6b8c01d35b8dcdcc6f",
      "Id": "9dd5b6a559b04d4491cc63eb41fe3792"
    },
    {
      "Start": "a5ce3e4f5ca74c8e894a54f342f42fac",
      "End": "0a69a15b8d404427baad67056b327f47",
      "Id": "b76140ae2dff4832b23ab2f14e7216c4"
    },
    {
      "Start": "ef483abc00f64b2daca3cfad030d19c8",
      "End": "8dd20c83a2ad4baf899b7d9a1325d25a",
      "Id": "a5cf76e1e3a74ddd886bebeccd0a9735"
    },
    {
      "Start": "d8ffe770f99c47ad9721904b7282d5ba",
      "End": "641f44cd97c44d06aa287d3e99b9198a",
      "Id": "f11117c8eb1147169c5d01239ddb8a7b"
    },
    {
      "Start": "7312d7c31bc745fdb33e27692ebcdc54",
      "End": "d42b93224e824c159c540c8d3d5f92c5",
      "Id": "c4ce26c8d9a5442cbd80bdf7838f41ab"
    },
    {
      "Start": "8cf63a0fbfbf440c99d4219eb533b612",
      "End": "f9bf251a48874d48b74df6d00f85c6f5",
      "Id": "6141e4e411114b259f5ddcc85cd5bfdd"
    },
    {
      "Start": "442ad397f23545b99cf777d2f839950a",
      "End": "9fbc433842b7457b88e8819628b95062",
      "Id": "0630ff70b92348a081c9a9cb779e929f"
    },
    {
      "Start": "5d3404a04f2443369e5abfe592b5a6d1",
      "End": "ab38f9a8e12b44ba9c6adb37c6b2379b",
      "Id": "2247e4a56e184f7f8ea8abda1c711a7e"
    },
    {
      "Start": "68f8350539d24bcaab94eea9e007d9f5",
      "End": "a89b605d61564ff59616a9e2f6d9e1b5",
      "Id": "5f7c5709664e422ba7c2a8892bfc5bf7"
    },
    {
      "Start": "e9106d73df784aa7b98d0bd97faf2c48",
      "End": "cabb812e37ec4474adfd9cb9d428f25e",
      "Id": "aebc6ab1c5614b41a7df52fa43c2d427"
    },
    {
      "Start": "ba898dbb62654bf7843eb91ff5521059",
      "End": "82308fc95c5f40448f4b6feb9cb1632d",
      "Id": "d07a8e6066dd45d888e63bec76268c30"
    },
    {
      "Start": "6fdd389a3b9047d6a6f62d650f6bb10f",
      "End": "8aaf739e09fd4c57b8371d4b9b65dcec",
      "Id": "1c1f1c2bf46147ad8e6fbe6314e6ed3c"
    },
    {
      "Start": "19d4794ae184474985a989763865db05",
      "End": "4ce3200116e4424595aefce60d961e58",
      "Id": "2df3ea24b9b14fa7bb12ca5ae6fbb812"
    },
    {
      "Start": "bd41efe1236e4789b7613bac9732dfdf",
      "End": "1b341b74830a47b79d8dff242538f702",
      "Id": "8380432c112d4467a55a61cd82cb9a63"
    },
    {
      "Start": "2d1706675ab649c6a50e1047f79b3ddc",
      "End": "887f464ef3e843ddaa7fa626d44b939e",
      "Id": "3bd3e68252ed453f8109ed34e9864d24"
    },
    {
      "Start": "ac76f31852a04de393b2c94c276c0d13",
      "End": "dc55355b3ba74c7f8233929d43c04146",
      "Id": "d14db0c2cf704bdb82ce2aee7c2be755"
    },
    {
      "Start": "b375ffff51db4daf8f5064e90eecce10",
      "End": "d88e914cb1bd4fed9984477c3a2acad1",
      "Id": "05b4413b457a40619dfed7e275d506cc"
    }
  ],
  "Dependencies": [
    "1e768134-b4c4-4605-a428-b2929598b21b"
  ],
  "NodeLibraryDependencies": [],
  "Bindings": [
    {
      "NodeId": "61617e14-4eac-42f6-ba92-114e04564cf9",
      "Binding": {
        "ByElevationAndName_InClassDecl-1_InFunctionScope-1_Instance0_61617e14-4eac-42f6-ba92-114e04564cf9": ""
      }
    },
    {
      "NodeId": "1bcce36c-7ea3-4c70-9271-544fd378ec41",
      "Binding": {
        "ByOutlineTypeAndLevel_InClassDecl-1_InFunctionScope-1_Instance0_1bcce36c-7ea3-4c70-9271-544fd378ec41": ""
      }
    },
    {
      "NodeId": "fdc9add4-7e47-40d3-ba57-72e349b53aa0",
      "Binding": {
        "ByPoints_InClassDecl-1_InFunctionScope-1_Instance0_fdc9add4-7e47-40d3-ba57-72e349b53aa0": ""
      }
    }
  ],
  "View": {
    "Dynamo": {
      "ScaleFactor": 1.0,
      "HasRunWithoutCrash": true,
      "IsVisibleInDynamoLibrary": true,
      "Version": "2.5.2.7915",
      "RunType": "Manual",
      "RunPeriod": "100"
    },
    "Camera": {
      "Name": "Background Preview",
      "EyeX": -17.0,
      "EyeY": 24.0,
      "EyeZ": 50.0,
      "LookX": 12.0,
      "LookY": -13.0,
      "LookZ": -58.0,
      "UpX": 0.0,
      "UpY": 1.0,
      "UpZ": 0.0
    },
    "NodeViews": [
      {
        "ShowGeometry": false,
        "Name": "Ellipse.ByOriginRadii",
        "Id": "df50c731453648a8af5df8110470ce5d",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 85.3848425978775,
        "Y": 10.7576218622244
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "687da7274c0d4a2cbdd9e8a4ebc11e9f",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -315.800814939077,
        "Y": 8.41330624938732
      },
      {
        "ShowGeometry": true,
        "Name": "Surface.ByLoft",
        "Id": "1dd7c86864d14b18a8278f28ba42fff8",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 295.293762111202,
        "Y": 30.0177655378816
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "0828c18c466342a2a7133bb4cdf310c6",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -1046.20315813764,
        "Y": 439.235193057258
      },
      {
        "ShowGeometry": true,
        "Name": "Number Slider",
        "Id": "32a73dc149434c339177290ea57c2b2b",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -1440.1654474104,
        "Y": 250.823076614742
      },
      {
        "ShowGeometry": true,
        "Name": "Point.ByCoordinates",
        "Id": "0d27cc6dec26449b8fb044507412d8e3",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 156.909882585775,
        "Y": 185.099582127578
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "17da1ec7f9fd4150b63081686a5072fb",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -1444.89148637736,
        "Y": 416.645145837956
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "35e15b45c97c49c48ece41b8936e65ea",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -829.5666330169,
        "Y": 344.100938231694
      },
      {
        "ShowGeometry": true,
        "Name": "List.AddItemToFront",
        "Id": "9ddaf020469f4978bdc3c3a4f25575b4",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -725.821367318018,
        "Y": 393.533415340371
      },
      {
        "ShowGeometry": true,
        "Name": "Plane.ByOriginNormal",
        "Id": "bab9680dbc9b401bb3863f747bba7fef",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 351.397711255458,
        "Y": 256.501536467636
      },
      {
        "ShowGeometry": true,
        "Name": "Vector.ZAxis",
        "Id": "56f121c92a284267acb587410c134853",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 203.315151363468,
        "Y": 326.669082887487
      },
      {
        "ShowGeometry": true,
        "Name": "Geometry.Intersect",
        "Id": "ee32c3002e704fbd91e7647a3d398165",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 567.597297059344,
        "Y": 139.428953372087
      },
      {
        "ShowGeometry": true,
        "Name": "Floor Types",
        "Id": "d5691294898b4cb6adcca5dc739122e6",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1599.11927010706,
        "Y": 499.900223461202
      },
      {
        "ShowGeometry": true,
        "Name": "List.Flatten",
        "Id": "9673206b20d24a4d802d0dea535f3b97",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 801.465243562939,
        "Y": 146.122601768799
      },
      {
        "ShowGeometry": true,
        "Name": "Level.ByElevationAndName",
        "Id": "61617e144eac42f6ba92114e04564cf9",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1213.92913654673,
        "Y": 797.317356877904
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "bf0f7c712f944d47b4ac5a0f5d5735cc",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 163.820466000301,
        "Y": 888.739158843482
      },
      {
        "ShowGeometry": true,
        "Name": "List.Count",
        "Id": "4603f9e930254507946395acb711e5d3",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 43.0855143461249,
        "Y": 891.496537692609
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "6056a56cbaa84f6aad355c68be985429",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 453.356748892059,
        "Y": 797.797809565766
      },
      {
        "ShowGeometry": true,
        "Name": "List.AddItemToFront",
        "Id": "7ada4d19809c479fa21f9c56f2fc1618",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 581.824487689818,
        "Y": 852.025395138034
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "ab2f98f161ca4ef69ef738b1e75b40ad",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 745.838985803801,
        "Y": 796.301810507243
      },
      {
        "ShowGeometry": true,
        "Name": "String.Concat",
        "Id": "ac182ff6b5054c28a7957740e7333033",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 863.777962372405,
        "Y": 803.332927444524
      },
      {
        "ShowGeometry": true,
        "Name": "List.Map",
        "Id": "81efbd9ab55e4012903593eb42fcd2c2",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1057.02894654303,
        "Y": 859.918041786687
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "1d4d7beb9ecb4e5c9eb0d610b08f028c",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 933.36377470563,
        "Y": 224.298744488801
      },
      {
        "ShowGeometry": true,
        "Name": "Floor.ByOutlineTypeAndLevel",
        "Id": "1bcce36c7ea34c709271544fd378ec41",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1915.93468369535,
        "Y": 463.654624563363
      },
      {
        "ShowGeometry": false,
        "Name": "Curve.PointAtParameter",
        "Id": "808124fa42bb480eba78a8ccdbff706e",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1062.02374436739,
        "Y": 173.737641749471
      },
      {
        "ShowGeometry": false,
        "Name": "PolyCurve.ByPoints",
        "Id": "8ae615cf96a043b1b18d5711df8642d9",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1272.46315249339,
        "Y": 177.85476335587
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "db407934abcc4598ba4893b716e56887",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 890.039415589223,
        "Y": -767.337517151826
      },
      {
        "ShowGeometry": true,
        "Name": "AdaptiveComponent.ByPoints",
        "Id": "fdc9add47e4740d3ba5772e349b53aa0",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1407.8183004284333,
        "Y": -418.48683440686841
      },
      {
        "ShowGeometry": true,
        "Name": "Family Types",
        "Id": "87dbdc09469f42b6a69662d22c3196b3",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 939.610376746049,
        "Y": -340.151244524123
      },
      {
        "ShowGeometry": true,
        "Name": "Element.OverrideColorInView",
        "Id": "d986daaceae14e80943044527fcb133e",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2833.38837013372,
        "Y": -674.497293435428
      },
      {
        "ShowGeometry": true,
        "Name": "File Path",
        "Id": "e0971bd156084659a4dd839292455472",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1655.16077341848,
        "Y": -900.540172299732
      },
      {
        "ShowGeometry": true,
        "Name": "List.Chop",
        "Id": "53a7d94ef49a459487de5659e81e317c",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2281.95480193125,
        "Y": -793.999860398927
      },
      {
        "ShowGeometry": true,
        "Name": "List.Transpose",
        "Id": "f446efcabbb147bcbdb2f99dc5f88a28",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2463.87936178437,
        "Y": -788.161740349785
      },
      {
        "ShowGeometry": true,
        "Name": "List.Flatten",
        "Id": "704e87d9cab04108bfd1035e12f40143",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2609.179840407,
        "Y": -787.117611119014
      },
      {
        "ShowGeometry": true,
        "Name": "List.Transpose",
        "Id": "473503b8e6f14893a3ae5e99941290a9",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2438.26754366693,
        "Y": -245.224620635545
      },
      {
        "ShowGeometry": true,
        "Name": "List.Flatten",
        "Id": "5e5344fdee964fc2ab2f47394f547a7e",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2583.56802228956,
        "Y": -244.180491404774
      },
      {
        "ShowGeometry": true,
        "Name": "List.Chop",
        "Id": "e7483b57b94a480780a52e37bf1edc7f",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2270.4938540907,
        "Y": -374.92257470848
      },
      {
        "ShowGeometry": true,
        "Name": "String from Object",
        "Id": "09e282cf8267436cbe10199d2c53ebe9",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 410.378101542665,
        "Y": 907.191006614734
      },
      {
        "ShowGeometry": true,
        "Name": "File.FromPath",
        "Id": "743bcc53b85d4553a18a6a0ce808ae5e",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1894.87245803092,
        "Y": -746.951018691508
      },
      {
        "ShowGeometry": true,
        "Name": "File.FromPath",
        "Id": "aa337df1a2474780a3026425bbcf5665",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2084.02307244524,
        "Y": -597.958427897998
      },
      {
        "ShowGeometry": true,
        "Name": "Image.ReadFromFile",
        "Id": "c763b6c51aad4ceb81fecdd8605f776f",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2097.42297519126,
        "Y": -711.033014153383
      },
      {
        "ShowGeometry": true,
        "Name": "Image.Pixels",
        "Id": "624f78ec977e41639d250563d04676c2",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2326.32126651742,
        "Y": -683.690214848209
      },
      {
        "ShowGeometry": true,
        "Name": "Image.ReadFromFile",
        "Id": "b720529e0add441094cd5d5bcd639c27",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2251.36117113135,
        "Y": -541.788240079045
      },
      {
        "ShowGeometry": true,
        "Name": "Image.Pixels",
        "Id": "dfbf69e9413d4d8ba7933caf4d96d84d",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2395.55533172065,
        "Y": -533.817708589184
      },
      {
        "ShowGeometry": true,
        "Name": "UVQuadsonSurface",
        "Id": "576bc499e44648caba70dffa1c70dee6",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 984.75435414464,
        "Y": -627.26360536940615
      },
      {
        "ShowGeometry": true,
        "Name": "List.Transpose",
        "Id": "ce8369a914f4433782f10291bcc5bed7",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1250.3148935325603,
        "Y": -553.28927477461741
      },
      {
        "ShowGeometry": true,
        "Name": "List.Transpose",
        "Id": "9ac2de4e833d4755843b056a872ff13c",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1450.0583194485764,
        "Y": -534.32629130157784
      },
      {
        "ShowGeometry": true,
        "Name": "List.Flatten",
        "Id": "3b24760ecf804ef5b4006db08a25edb8",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 3152.0947625696231,
        "Y": -676.48203853196128
      }
    ],
    "Annotations": [
      {
        "Id": "d029fd019b5240e5acef976b4f591168",
        "Title": "Floor elevations",
        "Nodes": [],
        "Left": -725.400333741058,
        "Top": 357.716754522334,
        "Width": 0.0,
        "Height": 0.0,
        "FontSize": 36.0,
        "InitialTop": 0.0,
        "InitialHeight": 0.0,
        "TextblockHeight": 0.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "a9ef4c7a5aa942daadcb70ded92d82cc",
        "Title": "Approximate curve by many-sided polygons",
        "Nodes": [],
        "Left": 1268.62285964199,
        "Top": 138.467305333858,
        "Width": 0.0,
        "Height": 0.0,
        "FontSize": 36.0,
        "InitialTop": 0.0,
        "InitialHeight": 0.0,
        "TextblockHeight": 0.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "791d45245e094ce0a33a667111165163",
        "Title": "Ellipses",
        "Nodes": [],
        "Left": 804.492422537978,
        "Top": 101.237297748669,
        "Width": 0.0,
        "Height": 0.0,
        "FontSize": 36.0,
        "InitialTop": 0.0,
        "InitialHeight": 0.0,
        "TextblockHeight": 0.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "6c5ee6cf1fec4309b611bed51da79caa",
        "Title": "Make levels",
        "Nodes": [],
        "Left": 44.1716364577037,
        "Top": 759.246149582949,
        "Width": 0.0,
        "Height": 0.0,
        "FontSize": 36.0,
        "InitialTop": 0.0,
        "InitialHeight": 0.0,
        "TextblockHeight": 0.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "ad987c0a8abd43ab8f3f9f2180bf1544",
        "Title": "Place panels in Revit",
        "Nodes": [],
        "Left": 868.992651780173,
        "Top": -536.198892778168,
        "Width": 0.0,
        "Height": 0.0,
        "FontSize": 36.0,
        "InitialTop": 0.0,
        "InitialHeight": 0.0,
        "TextblockHeight": 0.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "d4daec31e45d48d99158fec05fe4d39b",
        "Title": "Navigate to \"rainbow colors\" in the samples folder",
        "Nodes": [],
        "Left": 1655.16077341848,
        "Top": -945.704985867552,
        "Width": 0.0,
        "Height": 0.0,
        "FontSize": 36.0,
        "InitialTop": 0.0,
        "InitialHeight": 0.0,
        "TextblockHeight": 0.0,
        "Background": "#FFC1D676"
      }
    ],
    "X": -1366.730152976038,
    "Y": 637.73488624778668,
    "Zoom": 0.55985948580346934
  }
}